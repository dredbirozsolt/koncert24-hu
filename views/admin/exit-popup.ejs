<div class="page-container">
    <% if (messages.success) { %>
        <div class="alert alert-success">
            <span>‚úÖ</span>
            <span><%= messages.success %></span>
        </div>
    <% } %>

    <% if (messages.error) { %>
        <div class="alert alert-error">
            <span>‚ùå</span>
            <span><%= messages.error %></span>
        </div>
    <% } %>

    <div class="admin-two-col">
        <!-- Bal oldal: Form -->
        <div>
            <form method="POST" action="/admin/exit-popup" id="exitPopup-form">
                <input type="hidden" name="_csrf" value="<%= csrfToken %>">
                
                <!-- √Åltal√°nos be√°ll√≠t√°sok -->
                <div class="card--data">
                    <h3 class="section-title">
                        üîõ √Åltal√°nos Be√°ll√≠t√°sok
                    </h3>
                    
                    <div class="form__group">
                        <div class="form__switch-row">
                            <span class="form__switch-row-label">Popup enged√©lyez√©se</span>
                            <input type="checkbox" 
                                   class="form-switch-input"
                                   name="exit_popup.enabled" 
                                   id="exit_popup.enabled"
                                   value="true"
                                   <%= flatSettings['exit_popup.enabled'] === 'true' ? 'checked' : '' %>>
                        </div>
                        <small class="form__hint">A popup megjelen√≠t√©s√©nek be/kikapcsol√°sa a teljes weboldalon</small>
                    </div>
                </div>

                <!-- Megjelen√≠t√©si m√≥dok -->
                <div class="card--data">
                    <h3 class="section-title">
                        ‚ú® Megjelen√≠t√©si M√≥dok
                    </h3>
                    
                    <div class="form__group">
                        <label class="form__label">Trigger opci√≥k (t√∂bb is kiv√°laszthat√≥)</label>
                        <div class="form__toggle-options--stack">
                            <div class="form__switch-row">
                                <label class="form__switch-row-label" for="exit_popup.trigger_exit_intent">
                                    üñ±Ô∏è Exit Intent (Desktop)
                                </label>
                                <input type="checkbox" 
                                       class="form-switch-input"
                                       name="exit_popup.trigger_exit_intent" 
                                       id="exit_popup.trigger_exit_intent"
                                       value="true"
                                       <%= flatSettings['exit_popup.trigger_exit_intent'] === 'true' ? 'checked' : '' %>>
                            </div>
                            
                            <div class="form__switch-row">
                                <label class="form__switch-row-label" for="exit_popup.trigger_mobile_exit">
                                    üì± Mobil Exit
                                </label>
                                <input type="checkbox" 
                                       class="form-switch-input"
                                       name="exit_popup.trigger_mobile_exit" 
                                       id="exit_popup.trigger_mobile_exit"
                                       value="true"
                                       <%= flatSettings['exit_popup.trigger_mobile_exit'] === 'true' ? 'checked' : '' %>>
                            </div>
                            
                            <div class="form__switch-row">
                                <label class="form__switch-row-label" for="exit_popup.trigger_timed">
                                    ‚è±Ô∏è Id≈ëz√≠tett Megjelen√©s
                                </label>
                                <input type="checkbox" 
                                       class="form-switch-input"
                                       name="exit_popup.trigger_timed" 
                                       id="exit_popup.trigger_timed"
                                       value="true"
                                       <%= flatSettings['exit_popup.trigger_timed'] === 'true' ? 'checked' : '' %>>
                            </div>
                        </div>
                        <small class="form__hint">B√°rmelyik trigger aktiv√°lhatja a popupot</small>
                    </div>

                    <div class="form__group">
                        <label for="exit_popup.delay" class="form__label">Id≈ëz√≠t√©s (m√°sodpercben)</label>
                        <input type="number" 
                               name="exit_popup.delay" 
                               id="exit_popup.delay"
                               class="form__control"
                               value="<%= flatSettings['exit_popup.delay'] || '10' %>"
                               min="1"
                               max="300"
                               placeholder="10">
                        <small class="form__hint">Csak id≈ëz√≠tett popup eset√©n (1-300 mp)</small>
                    </div>
                </div>

                <!-- Popup tartalma -->
                <div class="card--data">
                    <h3 class="section-title">
                        ‚úèÔ∏è Popup Tartalma
                    </h3>
                    
                    <div class="form__group">
                        <label for="exit_popup.title" class="form__label">C√≠msor <span>*</span></label>
                        <input type="text" 
                               name="exit_popup.title" 
                               id="exit_popup.title"
                               class="form__control"
                               value="<%= flatSettings['exit_popup.title'] || 'Ne menj el m√©g!' %>"
                               placeholder="Ne menj el m√©g!"
                               required>
                        <small class="form__hint">R√∂vid, figyelemfelkelt≈ë c√≠msor</small>
                    </div>

                    <div class="form__group">
                        <label for="exit_popup.message" class="form__label">√úzenet <span>*</span></label>
                        <input type="text" 
                               name="exit_popup.message" 
                               id="exit_popup.message"
                               class="form__control"
                               value="<%= flatSettings['exit_popup.message'] || 'K√≠v√°ncsi vagy az √°rakra? Regisztr√°lj √©s azonnal l√°thatod az √∂sszes el≈ëad√≥ √°r√°t!' %>"
                               placeholder="K√≠v√°ncsi vagy az √°rakra? Regisztr√°lj √©s azonnal l√°thatod az √∂sszes el≈ëad√≥ √°r√°t!"
                               maxlength="200"
                               required>
                        <small class="form__hint">R√©szletes sz√∂veg, max 200 karakter</small>
                    </div>

                    <div>
                        <div class="form__group">
                            <label for="exit_popup.cta_text" class="form__label">CTA Gomb Sz√∂vege <span>*</span></label>
                            <input type="text" 
                                   name="exit_popup.cta_text" 
                                   id="exit_popup.cta_text"
                                   class="form__control"
                                   value="<%= flatSettings['exit_popup.cta_text'] || 'Regisztr√°lok most' %>"
                                   placeholder="Regisztr√°lok most"
                                   maxlength="30"
                                   required>
                            <small class="form__hint">Max 30 karakter</small>
                        </div>

                        <div class="form__group">
                            <label for="exit_popup.cta_link" class="form__label">CTA Gomb Linkje <span>*</span></label>
                            <input type="text" 
                                   name="exit_popup.cta_link" 
                                   id="exit_popup.cta_link"
                                   class="form__control"
                                   value="<%= flatSettings['exit_popup.cta_link'] || '/auth/register' %>"
                                   placeholder="/auth/register"
                                   required>
                            <small class="form__hint">Relat√≠v vagy abszol√∫t URL</small>
                        </div>
                    </div>
                </div>

                <!-- Kiv√©tel lista -->
                <div class="card--data">
                    <h3 class="section-title">
                        üö´ Kiv√©telek
                    </h3>
                    
                    <div class="form__group">
                        <label for="exit_popup.excluded_paths" class="form__label">URL-ek ahol NEM jelenik meg</label>
                        <textarea name="exit_popup.excluded_paths" 
                                  id="exit_popup.excluded_paths" 
                                  class="form__control excluded-paths-textarea"
                                  rows="6"
                                  placeholder="/auth/login&#10;/auth/register&#10;/foglalas&#10;/eloadok/r√©szletek"
                                 ><%= flatSettings['exit_popup.excluded_paths'] || '' %></textarea>
                        <small class="form__hint">
                            <strong>‚ö†Ô∏è FONTOS:</strong> A <code>/admin</code> √∫tvonal be√©getett - ne t√∂r√∂ld!<br>
                            Minden URL-t √∫j sorba √≠rj. R√©szleges egyez√©s m≈±k√∂dik.
                        </small>
                    </div>
                </div>

                <!-- Action Buttons -->
                <div class="btn__group btn__group--equal">
                    <button type="button" class="btn btn--secondary" onclick="testExitPopup()">
                        üß™ Teszt
                    </button>
                    <button type="submit" class="btn btn--primary">
                        üíæ Ment√©s
                    </button>
                </div>
            </form>
        </div>

        <!-- Jobb oldal: Info Panels -->
        <div>
            <!-- Haszn√°lati √∫tmutat√≥ -->
            <div class="card--data">
                <h3 class="section-title">
                    ‚ÑπÔ∏è Haszn√°lat
                </h3>
                
                <div>
                    <p>
                        <strong>‚ö†Ô∏è Fontos:</strong> A popup csak <strong>nem bejelentkezett</strong> felhaszn√°l√≥knak jelenik meg!
                    </p>
                    
                    <p>
                        <strong>üß™ Tesztel√©s:</strong><br>
                        ‚Ä¢ Kattints a "Teszt" gombra a popup el≈ën√©zethez<br>
                        ‚Ä¢ Nyisd meg inkognit√≥ m√≥dban a f≈ëoldalt<br>
                        ‚Ä¢ Az admin oldalakon nem jelenik meg
                    </p>
                    
                    <p>
                        <strong>üìä Gyakoris√°g:</strong><br>
                        Session√∂nk√©nt csak egyszer jelenik meg (bez√°r√°s vagy CTA kattint√°s ut√°n).
                    </p>
                </div>
            </div>

            <!-- Trigger m√≥dok -->
            <div class="card--data">
                <h3 class="section-title">
                    ‚ö° Trigger M√≥dok
                </h3>
                
                <div>
                    <div>
                        <strong>üñ±Ô∏è Exit Intent (Desktop):</strong><br>
                        Megjelenik, ha az eg√©r az ablak teteje fel√© mozdul (kil√©p√©si sz√°nd√©k).
                    </div>
                    
                    <div>
                        <strong>üì± Mobil Exit:</strong><br>
                        Gyors felfel√© scroll vagy vissza gomb √©rz√©kel√©skor jelenik meg.
                    </div>
                    
                    <div>
                        <strong>‚è±Ô∏è Id≈ëz√≠tett:</strong><br>
                        X m√°sodperc ut√°n automatikusan megjelenik az oldalon.
                    </div>
                </div>
            </div>

            <!-- Tippek -->
            <div class="card--data">
                <h3 class="section-title">
                    üí° Tippek
                </h3>
                
                <div>
                    <p>
                        <strong>‚úèÔ∏è C√≠msor:</strong><br>
                        R√∂vid, figyelemfelkelt≈ë (pl. "V√°rj! Ne maradj le!")
                    </p>
                    
                    <p>
                        <strong>üí¨ √úzenet:</strong><br>
                        Egy√©rtelm≈± value proposition (pl. "Regisztr√°lj √©s l√°thatod az √°rakat!")
                    </p>
                    
                    <p>
                        <strong>üéØ CTA Gomb:</strong><br>
                        Konkr√©t cselekv√©s (pl. "Mutasd az √°rakat", "Regisztr√°lok most")
                    </p>
                    
                    <p>
                        <strong>‚öôÔ∏è Trigger Javaslat:</strong><br>
                        Desktop: Exit intent<br>
                        Mobil: Mobil exit vagy Id≈ëz√≠tett (5-10 mp)
                    </p>
                </div>
            </div>

            <!-- GDPR -->
            <div class="card--data">
                <h3 class="section-title">
                    üõ°Ô∏è Adatv√©delem
                </h3>
                
                <div>
                    <p>
                        <strong>üîí GDPR kompatibilis:</strong><br>
                        Nem t√°rol szem√©lyes adatokat. Csak a megjelen√≠t√©si st√°tuszt menti sessionStorage-ban.
                    </p>
                    
                    <p>
                        <strong>üç™ Nem haszn√°l cookie-kat:</strong><br>
                        A session lej√°rt√°val minden adat t√∂rl≈ëdik automatikusan.
                    </p>
                </div>
            </div>

            <!-- P√©ld√°k kiv√©tel list√°ra -->
            <div class="card--data">
                <h3 class="section-title">
                    üìã Kiv√©tel Lista P√©ld√°k
                </h3>
                
                <div>
                    <p>
                        <strong>Tipikus kiz√°rt oldalak:</strong>
                    </p>
                    
                    <div>
                        /admin<br>
                        /auth/login<br>
                        /auth/register<br>
                        /foglalas<br>
                        /profil<br>
                        /vasarlas
                    </div>
                    
                    <p>
                        <strong>üí° Tipp:</strong> Ha <code>/eloadok</code> van a list√°n, akkor <code>/eloadok/kategoria/pop</code> is ki lesz z√°rva (r√©szleges egyez√©s).
                    </p>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
const csrfToken = '<%= csrfToken %>';

// Auto-save number input (delay field)
const delayInput = document.getElementById('exit_popup.delay');
if (delayInput) {
    delayInput.addEventListener('blur', async function() {
        const value = parseInt(this.value);
        const min = parseInt(this.min);
        const max = parseInt(this.max);
        
        // Validate min/max
        if (value < min || value > max) {
            showAlert('error', `‚ùå √ârt√©k ${min} √©s ${max} k√∂z√∂tt kell legyen`);
            this.value = this.defaultValue;
            return;
        }
        
        try {
            const data = {
                'exit_popup.delay': this.value
            };
            
            const response = await fetch('/admin/exit-popup', {
                method: 'POST',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest',
                    'X-CSRF-Token': csrfToken
                },
                body: JSON.stringify(data)
            });
            
            if (response.ok) {
                showAlert('success', '‚úÖ Mentve: Id≈ëz√≠t√©s');
            } else {
                throw new Error('Save failed: ' + response.status);
            }
        } catch (error) {
            console.error('‚ùå Auto-save error:', error);
            this.value = this.defaultValue;
            showAlert('error', '‚ùå Ment√©s sikertelen: ' + error.message);
        }
    });
}

// Auto-save checkboxes (switches)
const switches = [
    'exit_popup.enabled',
    'exit_popup.trigger_exit_intent',
    'exit_popup.trigger_mobile_exit',
    'exit_popup.trigger_timed'
];

switches.forEach(switchId => {
    const switchElement = document.getElementById(switchId);
    if (switchElement) {
        switchElement.addEventListener('change', async function() {
            const checkbox = this;
            const originalState = checkbox.checked;
            
            // Force repaint by toggling a dummy class
            checkbox.classList.add('switching');
            requestAnimationFrame(() => {
                checkbox.classList.remove('switching');
                // Remove focus to prevent glow
                checkbox.blur();
            });
            
            try {
                // Send only the current switch value
                const data = {
                    [switchId]: checkbox.checked ? 'true' : 'false'
                };
                
                // Send AJAX request with JSON body
                const response = await fetch('/admin/exit-popup', {
                    method: 'POST',
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest',
                        'X-CSRF-Token': csrfToken
                    },
                    body: JSON.stringify(data)
                });
                
                if (response.ok) {
                    const result = await response.json();
                    // Show success notification
                    const labelElement = checkbox.closest('.form__group, .form__toggle-option )?.querySelector('.form__label, .form__toggle-label, .form__switch-row-label');
                    const label = labelElement ? labelElement.textContent.trim().replace(/[üñ±Ô∏èüì±‚è±Ô∏è]/g, '').trim() : switchId;
                    showAlert('success', '‚úÖ Mentve: ' + label);
                } else {
                    throw new Error('Save failed: ' + response.status);
                }
            } catch (error) {
                console.error('‚ùå Auto-save error:', error);
                // Revert checkbox state
                checkbox.checked = originalState;
                // Force repaint after revert
                checkbox.classList.add('switching');
                requestAnimationFrame(() => {
                    checkbox.classList.remove('switching');
                });
                showAlert('error', '‚ùå Ment√©s sikertelen: ' + error.message);
            }
        });
    }
});

// Test Exit Popup - Show exact preview with real CSS
function testExitPopup() {
    // Get current form values
    const form = document.getElementById('exitPopup-form');
    const title = form.querySelector('[name="exit_popup.title"]').value || 'Ne menj el m√©g!';
    const message = form.querySelector('[name="exit_popup.message"]').value || '';
    const ctaText = form.querySelector('[name="exit_popup.cta_text"]').value || 'Regisztr√°lok most';
    const ctaLink = form.querySelector('[name="exit_popup.cta_link"]').value || '/auth/register';
    
    // Create popup with exact structure from exit-popup.js
    const popup = document.createElement('div');
    popup.className = 'exit-popup exit-popup--visible';
    popup.style.cssText = 'position: fixed !important; z-index: 999999 !important; top: 0 !important; left: 0 !important; right: 0 !important; bottom: 0 !important;';
    popup.setAttribute('role', 'dialog');
    popup.setAttribute('aria-modal', 'true');
    popup.setAttribute('aria-labelledby', 'exit-popup-title');

    popup.innerHTML = `
        <div class="exit-popup__overlay"></div>
        <div class="exit-popup__content">
          <button type="button" class="exit-popup__close" aria-label="Bez√°r√°s" onclick="this.closest('.exit-popup').remove()">
            <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <line x1="18" y1="6" x2="6" y2="18"></line>
              <line x1="6" y1="6" x2="18" y2="18"></line>
            </svg>
          </button>
          
          <div class="exit-popup__body">
            <h2 id="exit-popup-title" class="exit-popup__title">${escapeHtml(title)}</h2>
            ${message ? `<p class="exit-popup__message">${escapeHtml(message)}</p>` : ''}
            
            <div class="exit-popup__actions">
              <a href="${escapeHtml(ctaLink)}" class="exit-popup__cta" onclick="event.preventDefault(); alert('üß™ Teszt m√≥d - Link: ${escapeHtml(ctaLink)}');">
                ${escapeHtml(ctaText)}
              </a>
              <button type="button" class="exit-popup__dismiss" onclick="this.closest('.exit-popup').remove()">
                Nem, k√∂sz√∂n√∂m
              </button>
            </div>
          </div>
        </div>
    `;

    // Append to body
    document.body.appendChild(popup);
}

// Helper function to escape HTML
function escapeHtml(text) {
    const div = document.createElement('div');
    div.textContent = text;
    return div.innerHTML;
}

// ‚úÖ DESIGN SYSTEM: Uses global showAlert() from admin-alerts.js
// No local definition needed - automatically available on all admin pages

// Form submit handler - AJAX save without page reload
document.getElementById('exitPopup-form').addEventListener('submit', async function(e) {
    e.preventDefault();
    
    const form = this;
    const submitButton = form.querySelector('button[type="submit"]');
    const originalButtonText = submitButton.textContent;
    
    // Disable submit button during save
    submitButton.disabled = true;
    submitButton.textContent = 'üíæ Ment√©s...';
    
    try {
        // Collect form data
        const formData = new FormData(form);
        const data = {};
        
        // Convert FormData to object
        for (let [key, value] of formData.entries()) {
            // Handle checkboxes - if not in formData, they are unchecked
            if (key.startsWith('exit_popup.trigger_')) {
                data[key] = 'true';
            } else {
                data[key] = value;
            }
        }
        
        // Add unchecked checkboxes as 'false'
        const checkboxes = form.querySelectorAll('input[type="checkbox"][name^="exit_popup.trigger_"]');
        checkboxes.forEach(cb => {
            if (!cb.checked) {
                data[cb.name] = 'false';
            }
        });
        
        // Send AJAX request
        const response = await fetch('/admin/exit-popup', {
            method: 'POST',
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json',
                'X-Requested-With': 'XMLHttpRequest',
                'X-CSRF-Token': csrfToken
            },
            body: JSON.stringify(data)
        });
        
        if (response.ok) {
            const result = await response.json();
            showAlert('success', '‚úÖ Exit Popup be√°ll√≠t√°sok sikeresen mentve!');
        } else {
            const error = await response.json().catch(() => ({ message: 'Ismeretlen hiba' }));
            throw new Error(error.message || 'Ment√©s sikertelen');
        }
    } catch (error) {
        console.error('‚ùå Form save error:', error);
        showAlert('error', '‚ùå Ment√©s sikertelen: ' + error.message);
    } finally {
        // Re-enable submit button
        submitButton.disabled = false;
        submitButton.textContent = originalButtonText;
    }
});
</script>
