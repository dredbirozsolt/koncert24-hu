<div class="page-container">

<!-- Kritikus Figyelmeztet√©sek -->
<% if (stats?.alerts?.hasAlerts === true) { %>
<div class="card--data mb-6">
    <h3>‚ö†Ô∏è Azonnali Figyelem Sz√ºks√©ges!</h3>
    <div class="flex flex-col gap-3 mt-4">
        <% if (stats.alerts.unansweredChats > 0) { %>
        <a href="<%= basePath %>admin/chat" class="btn btn--warning text-left">
            üí¨ <strong><%= stats.alerts.unansweredChats %></strong> v√°laszra v√°r√≥ chat √ºzenet
        </a>
        <% } %>
        <% if (stats.alerts.offlineMessagesUrgent > 0) { %>
        <a href="<%= basePath %>admin/chat/offline-messages" class="btn btn--warning text-left">
            üìß <strong><%= stats.alerts.offlineMessagesUrgent %></strong> offline √ºzenet (48 √≥r√°s hat√°rid≈ë)
        </a>
        <% } %>
    </div>
</div>
<% } %>

<!-- √úzleti KPI-ok -->
<div class="card--data">
    <h3>üìä √úzleti √Åttekint√©s</h3>
    
    <!-- Foglal√°sok -->
    <div class="stats-grid">
        <div class="card--stat card--stat--primary">
            <h3>üìã √ñsszes Foglal√°s</h3>
            <div class="stat-value"><%= stats?.bookings?.total || 0 %></div>
        </div>
        
        <div class="card--stat card--stat--primary">
            <h3>üìÖ Mai Foglal√°sok</h3>
            <div class="stat-value"><%= stats?.bookings?.today || 0 %></div>
        </div>
        
        <div class="card--stat card--stat--info">
            <h3>üìà Heti Foglal√°sok</h3>
            <div class="stat-value"><%= stats?.bookings?.thisWeek || 0 %></div>
        </div>
        
        <div class="card--stat card--stat--success">
            <h3>üìä Havi Foglal√°sok</h3>
            <div class="stat-value"><%= stats?.bookings?.thisMonth || 0 %></div>
        </div>
    </div>
    
    <!-- Felhaszn√°l√≥k -->
    <div class="stats-grid mt-6">
        <div class="card--stat card--stat--info">
            <h3>üë• √ñsszes User</h3>
            <div class="stat-value"><%= stats?.users?.total || 0 %></div>
        </div>
        
        <div class="card--stat card--stat--success">
            <h3>‚ú® Mai √öj User</h3>
            <div class="stat-value"><%= stats?.users?.newToday || 0 %></div>
        </div>
        
        <div class="card--stat card--stat--success">
            <h3>üìà Heti √öj User</h3>
            <div class="stat-value"><%= stats?.users?.newThisWeek || 0 %></div>
        </div>
        
        <div class="card--stat card--stat--success">
            <h3>üìä Havi √öj User</h3>
            <div class="stat-value"><%= stats?.users?.newThisMonth || 0 %></div>
        </div>
    </div>
</div>

<!-- Top Performers -->
<% if (stats && stats.performers && stats.performers.topPerformers && stats.performers.topPerformers.length > 0) { %>
<div class="card--data">
    <h3>üèÜ Top 5 El≈ëad√≥k (Foglal√°sok Szerint)</h3>
    <div class="flex flex-col gap-3">
        <% stats.performers.topPerformers.forEach((performer, index) => { %>
        <div class="card card-bordered flex flex-row flex-wrap items-center justify-between p-3">
            <div class="flex items-center gap-3">
                <span class="text-2xl font-bold text-primary">
                    <%= index === 0 ? 'ü•á' : index === 1 ? 'ü•à' : index === 2 ? 'ü•â' : (index + 1) %>
                </span>
                <div>
                    <strong><%= performer.name %></strong>
                    <br>
                    <small class="text-muted"><%= performer.category %></small>
                </div>
            </div>
            <span class="badge badge-primary">
                <%= performer.bookingCount %> foglal√°s
            </span>
        </div>
        <% }) %>
    </div>
</div>
<% } %>

<!-- 12 H√≥napos Trend Grafikon -->
<div class="card--data">
    <h3>üìà Foglal√°si Trend (12 H√≥nap)</h3>
    <div class="chart-container">
        <canvas id="bookingTrendChart"></canvas>
    </div>
</div>

<!-- Rendszer √Ållapot -->
<div class="card--data">
    <h3>üíª Rendszer √Ållapot</h3>
    <div class="stats-grid">
        <% if (stats?.system?.cronJobs && stats.system.cronJobs.length > 0) { %>
            <% stats.system.cronJobs.forEach(job => { %>
            <div class="card--stat <%= job.hasError ? 'card--stat--error' : job.enabled ? 'card--stat--success' : 'card--stat--muted' %>">
                <h3>‚è∞ <%= job.name %></h3>
                <div class="text-sm">
                    <strong>St√°tusz:</strong> <%= job.enabled ? '‚úÖ Akt√≠v' : '‚è∏Ô∏è Letiltva' %>
                    <br>
                    <% if (job.lastRun) { %>
                        <strong>Utols√≥ fut:</strong> <%= new Date(job.lastRun).toLocaleString('hu-HU', { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit' }) %>
                    <% } else { %>
                    <strong>M√©g nem futott</strong>
                    <% } %>
                    <% if (job.hasError) { %>
                    <br>
                    <span class="text-error">‚ùå Hiba: <%= job.lastError %></span>
                    <% } %>
                </div>
            </div>
            <% }) %>
        <% } %>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.0/dist/chart.umd.min.js"></script>
<script>
(function() {
    // CSS v√°ltoz√≥k kiolvas√°sa a Chart.js sz√°m√°ra
    const rootStyles = getComputedStyle(document.documentElement);
    const primaryColor = rootStyles.getPropertyValue('--color-primary-500').trim();
    
    // Konvert√°ljuk hex-et RGB-re
    function hexToRgb(hex) {
        const result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
        return result ? {
            r: parseInt(result[1], 16),
            g: parseInt(result[2], 16),
            b: parseInt(result[3], 16)
        } : null;
    }
    
    const rgb = hexToRgb(primaryColor);
    const borderColor = rgb ? `rgb(${rgb.r}, ${rgb.g}, ${rgb.b})` : 'rgb(59, 130, 246)';
    const bgColor = rgb ? `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, 0.1)` : 'rgba(59, 130, 246, 0.1)';
    
    async function loadChartData() {
        try {
            const response = await fetch('<%= basePath %>admin/api/dashboard/chart-data?months=12');
            const result = await response.json();
            
            if (result.success && result.data) {
                initBookingTrendChart(result.data.bookingTrend);
            }
        } catch (error) {
            console.error('Failed to load chart data:', error);
        }
    }
    
    function initBookingTrendChart(data) {
        const ctx = document.getElementById('bookingTrendChart');
        if (!ctx) return;
        
        new Chart(ctx, {
            type: 'line',
            data: {
                labels: data.labels,
                datasets: [{
                    label: 'Foglal√°sok',
                    data: data.data,
                    borderColor: borderColor,
                    backgroundColor: bgColor,
                    tension: 0.4,
                    fill: true
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        display: false
                    },
                    tooltip: {
                        callbacks: {
                            label: function(context) {
                                return context.parsed.y + ' foglal√°s';
                            }
                        }
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            precision: 0
                        }
                    }
                }
            }
        });
    }
    
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', loadChartData);
    } else {
        loadChartData();
    }
})();
</script>

</div>
