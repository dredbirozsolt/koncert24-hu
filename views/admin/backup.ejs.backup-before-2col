<style>
    /* Backup specific styles */
    .backup-settings-grid {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 1.5rem;
        margin-bottom: 1.5rem;
    }
    
    .backup-list {
        margin-top: 1.5rem;
    }
    
    .backup-item {
        background: var(--bg-secondary);
        padding: 1rem;
        margin: 0.75rem 0;
        border-radius: var(--radius-md);
        border-left: 4px solid var(--color-success);
        display: flex;
        justify-content: space-between;
        align-items: center;
        flex-wrap: wrap;
        gap: 1rem;
    }
    
    .backup-item__name {
        font-weight: var(--font-medium);
        color: var(--text-primary);
        flex: 1;
        min-width: 200px;
    }
    
    .backup-item__date {
        color: var(--text-secondary);
        font-size: var(--text-sm);
    }
    
    .backup-item__size {
        color: var(--primary-color);
        font-size: var(--text-sm);
        font-weight: var(--font-semibold);
    }
    
    .backup-item__actions {
        display: flex;
        gap: 0.5rem;
    }
    
    .info-box {
        background: var(--color-info-50);
        border-left: 4px solid var(--primary-color);
        padding: 1rem;
        border-radius: var(--radius-md);
        margin-bottom: 1.5rem;
    }
    
    .info-box p {
        margin: 0.5rem 0;
        color: var(--text-primary);
    }
    
    .loading-message {
        display: block;
        color: var(--primary-color);
        font-style: italic;
        padding: 0.5rem;
    }
    
    .empty-backups {
        color: var(--text-secondary);
        text-align: center;
        padding: 2rem;
    }
    
    @media (max-width: 768px) {
        .backup-item {
            flex-direction: column;
            align-items: flex-start;
        }
        
        .backup-settings-grid {
            grid-template-columns: 1fr;
        }
    }
</style>

<div class="page-container">
    <!-- Alert messages -->
    <% if (locals.messages) { %>
        <% if (messages.success) { %>
            <div class="alert alert-success">
                ‚úÖ <%= messages.success %>
            </div>
        <% } %>
        <% if (messages.error) { %>
            <div class="alert alert-error">
                ‚ùå <%= messages.error %>
            </div>
        <% } %>
    <% } %>

    <!-- Backup Settings Card -->
    <div class="data-card">
        <div class="card-header">
            <span>‚öôÔ∏è Backup Be√°ll√≠t√°sok</span>
        </div>
        <div class="card-body">
            <form id="backup-settings-form">
                <input type="hidden" name="_csrf" value="<%= locals.csrfToken || '' %>">
                
                <div class="backup-settings-grid">
                    <div class="form-group">
                        <label for="maxCount" class="form-label">
                            üìä Maximum Backup Darabsz√°m
                        </label>
                        <input 
                            type="number" 
                            id="maxCount" 
                            name="maxCount" 
                            value="<%= settings.maxCount %>"
                            min="1"
                            max="100"
                            class="form-input"
                            required
                        >
                        <small class="form-help">
                            Ennyi backup maradhat meg a rendszerben egyszerre
                        </small>
                    </div>
                    
                    <div class="form-group">
                        <label for="maxAgeDays" class="form-label">
                            üìÖ Maximum Meg≈ërz√©si Id≈ë (napokban)
                        </label>
                        <input 
                            type="number" 
                            id="maxAgeDays" 
                            name="maxAgeDays" 
                            value="<%= settings.maxAgeDays %>"
                            min="1"
                            max="365"
                            class="form-input"
                            required
                        >
                        <small class="form-help">
                            Enn√©l r√©gebbi backupok automatikusan t√∂rl≈ëdnek
                        </small>
                    </div>
                </div>
                
                <div class="form-actions">
                    <button type="submit" class="btn btn-success">
                        üíæ Be√°ll√≠t√°sok Ment√©se
                    </button>
                </div>
            </form>
            
            <div id="settings-status"></div>
        </div>
    </div>

    <!-- Info Box -->
    <div class="info-box">
        <p><strong>‚ÑπÔ∏è Inform√°ci√≥:</strong></p>
        <p>A backup rendszer automatikusan kezeli a r√©gi ment√©seket a be√°ll√≠tott param√©terek alapj√°n.</p>
        <p>A backup script (<code>backup.sh</code>) fut napi szinten a cron job √°ltal.</p>
    </div>

    <!-- Backup List Card -->
    <div class="data-card">
        <div class="card-header">
            <span>üìÇ Backup Lista</span>
            <div class="card-header-actions">
                <button type="button" class="btn btn-primary" onclick="runManualBackup()">
                    ‚ñ∂Ô∏è Manu√°lis Backup Ind√≠t√°sa
                </button>
            </div>
        </div>
        <div class="card-body">
            <% if (backupInfo.backups && backupInfo.backups.length > 0) { %>
                <div class="backup-list">
                    <% backupInfo.backups.forEach(backup => { %>
                        <div class="backup-item">
                            <div class="backup-item__name">
                                üì¶ <%= backup.name %>
                            </div>
                            <div class="backup-item__date">
                                üìÖ <%= new Date(backup.created).toLocaleString('hu-HU') %>
                            </div>
                            <div class="backup-item__size">
                                üíæ <%= (backup.size / 1024 / 1024).toFixed(2) %> MB
                            </div>
                            <div class="backup-item__actions">
                                <button type="button" class="btn btn-sm btn-primary" onclick="downloadBackup('<%= backup.name %>')">
                                    ‚¨áÔ∏è Let√∂lt√©s
                                </button>
                            </div>
                        </div>
                    <% }); %>
                </div>
            <% } else { %>
                <div class="empty-backups">
                    üì≠ M√©g nincs egyetlen backup sem.
                </div>
            <% } %>
        </div>
    </div>
</div>

<script>
    // Backup settings form submission
    document.getElementById('backup-settings-form').addEventListener('submit', async function(e) {
        e.preventDefault();
        
        const csrfToken = document.querySelector('meta[name="csrf-token"]')?.getAttribute('content');
        const statusEl = document.getElementById('settings-status');
        const maxCount = document.getElementById('maxCount').value;
        const maxAgeDays = document.getElementById('maxAgeDays').value;
        
        statusEl.innerHTML = '<div class="loading-message">‚è≥ Be√°ll√≠t√°sok ment√©se...</div>';
        
        try {
            const response = await fetch('/admin/backup/settings', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRF-Token': csrfToken
                },
                body: JSON.stringify({ maxCount, maxAgeDays })
            });
            
            const data = await response.json();
            
            if (data.success) {
                await UniversalModal.success(data.message);
                setTimeout(() => window.location.reload(), 1000);
            } else {
                await UniversalModal.error('Hiba: ' + data.error);
                statusEl.innerHTML = '';
            }
        } catch (error) {
            await UniversalModal.error('H√°l√≥zati hiba: ' + error.message);
            statusEl.innerHTML = '';
        }
    });
    
    // Manual backup function
    async function runManualBackup() {
        const confirmed = await UniversalModal.confirmDialog(
            'Biztosan el szeretn√©d ind√≠tani a manu√°lis backup-ot?',
            'Ez t√∂bb percet is ig√©nybe vehet.'
        );
        
        if (!confirmed) return;
        
        const csrfToken = document.querySelector('meta[name="csrf-token"]')?.getAttribute('content');
        
        // Show loading modal
        const loadingModal = UniversalModal.show('‚è≥ Backup folyamatban...', 'info');
        
        try {
            const response = await fetch('/admin/backup/run', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRF-Token': csrfToken
                }
            });
            
            const data = await response.json();
            
            if (data.success) {
                await UniversalModal.success('Backup sikeresen elk√©sz√ºlt!');
                setTimeout(() => window.location.reload(), 1000);
            } else {
                await UniversalModal.error('Backup hiba: ' + data.error);
            }
        } catch (error) {
            await UniversalModal.error('H√°l√≥zati hiba: ' + error.message);
        }
    }
    
    // Download backup function
    async function downloadBackup(backupName) {
        try {
            await UniversalModal.success('Let√∂lt√©s indul...');
            window.location.href = `/admin/backup/download/${encodeURIComponent(backupName)}`;
        } catch (error) {
            await UniversalModal.error('Let√∂lt√©si hiba: ' + error.message);
        }
    }
</script>
