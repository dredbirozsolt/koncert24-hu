<!-- SEO Settings Page -->
<!-- Using Rounded Soft Design System & admin.css -->

<!-- Toggle Switch Component CSS -->
<style>
    /* Section spacing */
    .page-container > .data-card {
        margin-bottom: 2rem;
    }

    .page-container > .data-card:last-child {
        margin-bottom: 0;
    }

    /* Toggle setting layout */
    .toggle-setting {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 0.75rem 0;
    }

    .toggle-setting__label {
        font-weight: var(--font-weight-medium);
        color: var(--text-primary);
    }

    .seo-section {
        background: var(--bg-secondary);
        padding: 1.5rem;
        border-radius: 12px;
        margin-bottom: 1.5rem;
    }

    .seo-section-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 1rem;
    }

    .seo-section-title {
        margin: 0;
        color: var(--primary-color);
        font-size: 1.1rem;
        font-weight: var(--font-weight-semibold);
    }

    .toggle-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 1rem;
    }

    .seo-info-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 1rem;
    }

    .seo-info-card {
        padding: 1rem;
        background: white;
        border-radius: var(--radius-lg);
        border: 1px solid var(--border-color);
    }

    .seo-info-card-title {
        font-weight: bold;
        color: var(--primary-color);
        margin-bottom: 0.5rem;
    }

    .seo-info-card-content {
        font-size: 0.9rem;
        color: var(--text-secondary);
    }

    .btn-group {
        display: flex;
        gap: 1rem;
        flex-wrap: wrap;
        margin-top: 1rem;
    }

    .gtm-guide {
        display: none;
        background: var(--bg-secondary);
        border: 2px solid var(--primary-color);
        border-radius: var(--radius-lg);
        padding: 1.5rem;
        margin-bottom: 1.5rem;
        line-height: 1.8;
    }

    .gtm-guide h4 {
        margin: 0 0 1rem 0;
        color: var(--primary-color);
    }

    .gtm-guide ul {
        margin: 0.5rem 0;
        padding-left: 1.5rem;
    }

    .gtm-guide-section {
        margin-bottom: 1rem;
    }

    .seo-tips-box {
        background: var(--color-info-100);
        border-left: 4px solid var(--primary-color);
        border-radius: var(--radius-lg);
        padding: 1.5rem;
    }

    .seo-tips-box h3 {
        margin: 0 0 1rem 0;
        color: var(--text-primary);
    }

    .seo-tips-box ul {
        margin: 0;
        padding-left: 1.5rem;
        color: var(--text-secondary);
        line-height: 1.8;
    }

    .modal-preview {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.5);
        z-index: 9999;
        overflow: auto;
    }

    .modal-preview-content {
        background: white;
        margin: 2rem auto;
        max-width: 1000px;
        border-radius: var(--radius-lg);
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
    }

    .modal-preview-header {
        padding: 1.5rem;
        border-bottom: 1px solid var(--border-color);
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .modal-preview-header h3 {
        margin: 0;
        color: var(--primary-color);
    }

    .modal-preview-close {
        background: none;
        border: none;
        font-size: 1.5rem;
        cursor: pointer;
        color: var(--text-secondary);
    }

    .modal-preview-body {
        padding: 1.5rem;
    }

    .modal-preview-stats {
        margin-bottom: 1rem;
        padding: 1rem;
        background: var(--bg-secondary);
        border-radius: var(--radius-base);
        display: none;
    }

    .modal-preview-stats-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
        gap: 0.5rem;
        font-size: 0.9rem;
    }

    .modal-preview-code {
        background: #2d2d2d;
        color: #f8f8f2;
        padding: 1.5rem;
        border-radius: var(--radius-base);
        overflow-x: auto;
        font-family: 'Courier New', monospace;
        font-size: 0.85rem;
        line-height: 1.5;
        max-height: 60vh;
        overflow-y: auto;
    }

    .modal-preview-footer {
        padding: 1.5rem;
        border-top: 1px solid var(--border-color);
        text-align: right;
    }

    .status-message {
        display: inline-block;
        margin-top: 1rem;
    }
</style>

<div class="page-container">
    <!-- Success/Error Messages -->
    <% if (messages && messages.success) { %>
    <div class="alert alert-success"><%= messages.success %></div>
    <% } %>
    <% if (messages && messages.error) { %>
    <div class="alert alert-danger"><%= messages.error %></div>
    <% } %>

    <!-- 1. Sitemap Information Card -->
    <div class="data-card">
        <div class="card-header">
            <span>üìë Sitemap Be√°ll√≠t√°sok √©s Inform√°ci√≥k</span>
        </div>
        <div class="card-body">
            <!-- Sitemap Toggle Settings -->
            <div class="seo-section">
                <div class="seo-section-header">
                    <h3 class="seo-section-title">‚öôÔ∏è Be√°ll√≠t√°sok</h3>
                </div>
                
                <div class="toggle-grid" id="sitemap-toggles">
                    <div class="toggle-setting">
                        <span class="toggle-setting__label">Sitemap gener√°l√°s enged√©lyez√©se</span>
                        <form method="POST" action="/admin/seo/toggle/sitemap-enabled" class="status-toggle-form">
                            <input type="hidden" name="_csrf" value="<%= csrfToken %>">
                            <button type="submit" class="status-toggle <%= settings.sitemapEnabled ? 'status-toggle--active' : 'status-toggle--inactive' %>">
                                <span class="status-toggle__label">
                                    <%= settings.sitemapEnabled ? 'Bekapcsolva' : 'Kikapcsolva' %>
                                </span>
                            </button>
                        </form>
                    </div>
                    
                    <div class="toggle-setting">
                        <span class="toggle-setting__label">Automatikus gener√°l√°s (napi 2:00)</span>
                        <form method="POST" action="/admin/seo/toggle/auto-generate" class="status-toggle-form">
                            <input type="hidden" name="_csrf" value="<%= csrfToken %>">
                            <button type="submit" class="status-toggle <%= settings.autoGenerate ? 'status-toggle--active' : 'status-toggle--inactive' %>">
                                <span class="status-toggle__label">
                                    <%= settings.autoGenerate ? 'Bekapcsolva' : 'Kikapcsolva' %>
                                </span>
                            </button>
                        </form>
                    </div>
                    
                    <div class="toggle-setting">
                        <span class="toggle-setting__label">Keres≈ëmotorok automatikus √©rtes√≠t√©se</span>
                        <form method="POST" action="/admin/seo/toggle/ping-enabled" class="status-toggle-form">
                            <input type="hidden" name="_csrf" value="<%= csrfToken %>">
                            <button type="submit" class="status-toggle <%= settings.pingEnabled ? 'status-toggle--active' : 'status-toggle--inactive' %>">
                                <span class="status-toggle__label">
                                    <%= settings.pingEnabled ? 'Bekapcsolva' : 'Kikapcsolva' %>
                                </span>
                            </button>
                        </form>
                    </div>
                    
                    <div class="toggle-setting">
                        <span class="toggle-setting__label">Robots.txt enged√©lyez√©se</span>
                        <form method="POST" action="/admin/seo/toggle/robots-enabled" class="status-toggle-form">
                            <input type="hidden" name="_csrf" value="<%= csrfToken %>">
                            <button type="submit" class="status-toggle <%= settings.robotsTxtEnabled ? 'status-toggle--active' : 'status-toggle--inactive' %>">
                                <span class="status-toggle__label">
                                    <%= settings.robotsTxtEnabled ? 'Bekapcsolva' : 'Kikapcsolva' %>
                                </span>
                            </button>
                        </form>
                    </div>
                </div>
            </div>
            
            <!-- Sitemap Info -->
            <div class="form-group">
                <h3 class="seo-section-title">üìä St√°tusz</h3>
                <div id="sitemap-info" class="seo-section">
                    <div class="loading">üîÑ Inform√°ci√≥k bet√∂lt√©se...</div>
                </div>
            </div>
            
            <div class="btn-group">
                <button onclick="generateSitemap()" class="btn btn-primary">
                    üîÑ Sitemap Gener√°l√°s Most
                </button>
                <button onclick="pingSearchEngines()" class="btn btn-success">
                    üì° Keres≈ëmotorok √ârtes√≠t√©se
                </button>
                <a href="/sitemap.xml" target="_blank" class="btn btn-secondary">
                    üëÅÔ∏è Sitemap Megtekint√©se
                </a>
                <a href="/robots.txt" target="_blank" class="btn btn-secondary">
                    ü§ñ Robots.txt Megtekint√©se
                </a>
            </div>
            <span id="sitemap-status" class="status-message"></span>
        </div>
    </div>

    <!-- 2. Google Tag Manager Settings Card -->
    <div class="data-card">
        <div class="card-header">
            <span>üîó Google Tag Manager</span>
        </div>
        <div class="card-body">
            <form id="google-services-form">
                <div class="form-group">
                    <label class="form-label" for="googleTagManagerId">
                        Google Tag Manager ID
                    </label>
                    <input 
                        type="text" 
                        name="googleTagManagerId"
                        id="googleTagManagerId"
                        class="form-input"
                        value="<%= settings.googleTagManagerId %>"
                        placeholder="GTM-XXXXXXX"
                    >
                    <small class="form-help">
                        Pl: GTM-ABC1234 - <strong>Ez kezeli az √∂sszes tracking-et (GA4, Meta Pixel, stb.)</strong>
                    </small>
                </div>
                
                <div class="form-actions">
                    <button type="submit" class="btn btn-primary">
                        üíæ GTM Ment√©se
                    </button>
                    <span id="google-services-status"></span>
                </div>

                <!-- GTM √ötmutat√≥ gomb -->
                <div class="form-group">
                    <button type="button" class="btn btn-info" onclick="toggleGtmGuide()">
                        üìã GTM Be√°ll√≠t√°si √ötmutat√≥
                    </button>
                </div>
                
                <!-- GTM √ötmutat√≥ tartalom -->
                <div id="gtm-guide" class="gtm-guide">
                    <h4>üìã GTM Be√°ll√≠t√°si √ötmutat√≥</h4>
                    <div class="gtm-guide-section">
                        <strong>üîπ 1. Google Tag Manager fi√≥k l√©trehoz√°sa</strong><br>
                        Menj ide: <a href="https://tagmanager.google.com" target="_blank">https://tagmanager.google.com</a><br>
                        Hozz l√©tre egy √∫j fi√≥kot (Account):
                        <ul>
                            <li>N√©v: pl. a c√©ged neve</li>
                            <li>Orsz√°g: Magyarorsz√°g</li>
                            <li>Container neve: pl. ‚ÄûWeboldal"</li>
                            <li>Platform: Web</li>
                            <li>Kapsz egy GTM k√≥dot</li>
                        </ul>
                    </div>
                    
                    <div class="gtm-guide-section">
                        <strong>üîπ 2. GTM k√≥d beilleszt√©se</strong><br>
                        Ezen az oldalon a <strong>Google Tag Manager ID</strong> mez≈ëbe illeszd be a GTM √°ltal adott azonos√≠t√≥t (pl. GTM-XXXXXXX).<br>
                        Innent≈ël minden k√∂vet√©s innen megy, nem kell k√ºl√∂n GA vagy Pixel k√≥dot beilleszteni.
                    </div>
                    
                    <div class="gtm-guide-section">
                        <strong>üîπ 3. Google Analytics 4 (GA4) bek√∂t√©se GTM-be</strong><br>
                        GTM admin fel√ºlet ‚Üí Tags ‚Üí New ‚Üí Google Analytics: GA4 Configuration.<br>
                        Add meg a Measurement ID-t (ilyesmi: G-XXXXXXX), amit a Google Analytics-ben tal√°lsz.<br>
                        Trigger: All Pages (√≠gy minden oldalon fut).<br>
                        Ment√©s ‚Üí Publish.
                    </div>
                    
                    <div class="gtm-guide-section">
                        <strong>üîπ 4. Facebook Pixel bek√∂t√©se GTM-be</strong><br>
                        GTM ‚Üí Tags ‚Üí New ‚Üí Custom HTML.<br>
                        Illeszd be a Facebook Pixel k√≥dot (Events Managerb≈ël kapod).<br>
                        Trigger: All Pages (ha minden oldalon fusson), vagy csak bizonyos oldalakon (pl. k√∂sz√∂n≈ëoldal).<br>
                        Ha konverzi√≥kat is akarsz m√©rni (pl. gombkattint√°s, v√°s√°rl√°s), akkor k√ºl√∂n ‚ÄûEvent Tag"-et hozol l√©tre.
                    </div>
                    
                    <div class="gtm-guide-section">
                        <strong>üîπ 5. Tesztel√©s</strong><br>
                        GTM-ben van Preview Mode ‚Üí l√°tod, mely tagek futnak.<br>
                        Google Tag Assistant Chrome b≈ëv√≠tm√©nnyel ellen≈ërizheted.<br>
                        GA4-ben √©s a Facebook Events Managerben is l√°tsz majd √©l≈ë adatokat.
                    </div>
                    
                    <div class="gtm-guide-section">
                        <strong>üîπ 6. Publik√°l√°s √©s karbantart√°s</strong><br>
                        Ha minden m≈±k√∂dik ‚Üí Publish.<br>
                        Ha √∫j k√∂vet√©st akarsz hozz√°adni (pl. LinkedIn, TikTok, Hotjar), csak GTM-ben kell l√©trehozni, nem kell a weboldalhoz ny√∫lni.
                    </div>
                </div>
            </form>
        </div>
    </div>

    <!-- 3. SEO Keywords Card -->
    <div class="data-card">
        <div class="card-header">
            <span>üî§ SEO Kulcsszavak</span>
        </div>
        <div class="card-body">
            <form id="keywords-form">
                <div class="form-group">
                    <label class="form-label" for="defaultKeywords">
                        Alap√©rtelmezett SEO Kulcsszavak
                    </label>
                    <textarea 
                        name="defaultKeywords"
                        id="defaultKeywords"
                        class="form-input"
                        rows="3"
                        placeholder="koncert, rendezv√©ny, el≈ëad√≥, fell√©p≈ë..."
                    ><%= settings.defaultKeywords || 'koncert, rendezv√©ny, el≈ëad√≥, fell√©p≈ë, zen√©sz, esk√ºv≈ë, c√©ges rendezv√©ny' %></textarea>
                    <small class="form-help">
                        üìä Haszn√°lat: oldal c√≠mek, le√≠r√°sok b≈ëv√≠t√©se, Schema.org (vessz≈ëvel elv√°lasztva)
                    </small>
                </div>
                
                <div class="form-actions">
                    <button type="submit" class="btn btn-primary">
                        üíæ Kulcsszavak Ment√©se
                    </button>
                    <span id="keywords-status"></span>
                </div>
            </form>
        </div>
    </div>

    <!-- 4. SEO Info Box -->
    <div class="data-card seo-tips-box">
        <h3>‚ÑπÔ∏è SEO Tippek</h3>
        <ul>
            <li>A sitemap automatikusan naponta 2:00-kor gener√°l√≥dik √©s √©rtes√≠ti a keres≈ëmotorokat</li>
            <li>Manu√°lisan is gener√°lhatsz sitemap-et, ha √∫j tartalom ker√ºlt az oldalra</li>
            <li><strong>A robots.txt dinamikusan gener√°l√≥dik</strong> a be√°ll√≠t√°sok alapj√°n</li>
            <li>Google Analytics √©s Tag Manager seg√≠t k√∂vetni a l√°togat√≥kat</li>
            <li>Search Console verification sz√ºks√©ges a Google webmastertools haszn√°lat√°hoz</li>
        </ul>
    </div>

    <!-- Robots.txt Preview Modal -->
    <div id="robots-preview-modal" class="modal-preview">
        <div class="modal-preview-content">
            <div class="modal-preview-header">
                <h3>ü§ñ Robots.txt El≈ën√©zet</h3>
                <button onclick="closeRobotsPreview()" class="modal-preview-close">√ó</button>
            </div>
            <div class="modal-preview-body">
                <div id="robots-stats" class="modal-preview-stats">
                    <!-- Stats will be inserted here -->
                </div>
                <pre id="robots-content" class="modal-preview-code">Bet√∂lt√©s...</pre>
            </div>
            <div class="modal-preview-footer">
                <a href="/robots.txt" target="_blank" class="btn btn-primary">
                    üåê √âl≈ë Robots.txt Megtekint√©se
                </a>
                <button onclick="closeRobotsPreview()" class="btn btn-secondary">
                    Bez√°r√°s
                </button>
            </div>
        </div>
    </div>

    <!-- Sitemap.xml Preview Modal -->
    <div id="sitemap-preview-modal" class="modal-preview">
        <div class="modal-preview-content">
            <div class="modal-preview-header">
                <h3>üìÑ Sitemap.xml El≈ën√©zet</h3>
                <button onclick="closeSitemapPreview()" class="modal-preview-close">√ó</button>
            </div>
            <div class="modal-preview-body">
                <div id="sitemap-stats" class="modal-preview-stats">
                    <!-- Stats will be inserted here -->
                </div>
                <pre id="sitemap-content" class="modal-preview-code">Bet√∂lt√©s...</pre>
            </div>
            <div class="modal-preview-footer">
                <a href="/sitemap.xml" target="_blank" class="btn btn-primary">
                    üåê √âl≈ë Sitemap.xml Megtekint√©se
                </a>
                <button onclick="closeSitemapPreview()" class="btn btn-secondary">
                    Bez√°r√°s
                </button>
            </div>
        </div>
    </div>

</div> <!-- /page-container -->

<script>
    // Load sitemap information on page load
    async function loadSitemapInfo() {
        try {
            const response = await fetch('/admin/seo/sitemap-info');
            const data = await response.json();
            
            if (data.success) {
                let html = '<div class="seo-info-grid">';
                
                // Sitemap info
                if (data.sitemap.exists) {
                    const modified = new Date(data.sitemap.modified).toLocaleString('hu-HU');
                    const sizeKB = (data.sitemap.size / 1024).toFixed(2);
                    
                    html += `
                        <div class="seo-info-card">
                            <div class="seo-info-card-title">üìÑ Sitemap.xml</div>
                            <div class="seo-info-card-content">
                                <div>‚úÖ L√©tezik</div>
                                <div>üìä ${data.sitemap.urlCount} URL</div>
                                <div>üíæ ${sizeKB} KB</div>
                                <div>üïí ${modified}</div>
                                <div class="form-group">
                                    <button onclick="showSitemapPreview()" class="btn btn-info btn-sm">
                                        üëÅÔ∏è El≈ën√©zet
                                    </button>
                                </div>
                            </div>
                        </div>
                    `;
                } else {
                    html += `
                        <div class="seo-info-card">
                            <div class="seo-info-card-title">üìÑ Sitemap.xml</div>
                            <div class="seo-info-card-content">
                                ‚ùå M√©g nincs gener√°lva
                            </div>
                        </div>
                    `;
                }
                
                // Robots.txt info (dinamikus)
                if (data.robots.exists) {
                    const sizeBytes = data.robots.size || 0;
                    const stats = data.robots.stats || {};
                    
                    html += `
                        <div class="seo-info-card">
                            <div class="seo-info-card-title">ü§ñ Robots.txt</div>
                            <div class="seo-info-card-content">
                                <div>‚úÖ Dinamikus gener√°l√°s</div>
                                <div>üíæ ${sizeBytes} byte</div>
                                ${stats.userAgents ? `<div>ü§µ ${stats.userAgents} user-agent</div>` : ''}
                                ${stats.disallowRules ? `<div>üö´ ${stats.disallowRules} disallow szab√°ly</div>` : ''}
                                <div class="form-group">
                                    <button onclick="showRobotsPreview()" class="btn btn-info btn-sm">
                                        üëÅÔ∏è El≈ën√©zet
                                    </button>
                                </div>
                            </div>
                        </div>
                    `;
                } else {
                    html += `
                        <div class="seo-info-card">
                            <div class="seo-info-card-title">ü§ñ Robots.txt</div>
                            <div class="seo-info-card-content">
                                ‚ö†Ô∏è Dinamikus gener√°l√°s akt√≠v
                            </div>
                        </div>
                    `;
                }
                
                html += '</div>';
                
                document.getElementById('sitemap-info').innerHTML = html;
            } else {
                document.getElementById('sitemap-info').innerHTML = '<div class="alert alert-error">‚ùå Hiba az inform√°ci√≥k bet√∂lt√©sekor</div>';
            }
        } catch (error) {
            console.error('Error loading sitemap info:', error);
            document.getElementById('sitemap-info').innerHTML = '<div class="alert alert-error">‚ùå Hiba: ' + error.message + '</div>';
        }
    }

    // Generate sitemap
    async function generateSitemap() {
        const statusEl = document.getElementById('sitemap-status');
        statusEl.innerHTML = '<span class="text-info">üîÑ Gener√°l√°s folyamatban...</span>';
        
        try {
            const csrfToken = document.querySelector('meta[name="csrf-token"]')?.getAttribute('content');
            const response = await fetch('/admin/seo/generate-sitemap', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRF-Token': csrfToken
                }
            });
            
            const data = await response.json();
            
            if (data.success) {
                await UniversalModal.success(data.message);
                setTimeout(() => loadSitemapInfo(), 500);
            } else {
                await UniversalModal.error(data.message);
            }
        } catch (error) {
            await UniversalModal.error(`H√°l√≥zati hiba: ${error.message}`);
        }
        
        statusEl.innerHTML = '';
    }

    // Ping search engines
    async function pingSearchEngines() {
        const statusEl = document.getElementById('sitemap-status');
        statusEl.innerHTML = '<span class="text-info">üì° √ârtes√≠t√©s folyamatban...</span>';
        
        try {
            const csrfToken = document.querySelector('meta[name="csrf-token"]')?.getAttribute('content');
            const response = await fetch('/admin/seo/ping-search-engines', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRF-Token': csrfToken
                }
            });
            
            const data = await response.json();
            
            if (data.success) {
                await UniversalModal.success(data.message);
            } else {
                await UniversalModal.error(data.message);
            }
        } catch (error) {
            await UniversalModal.error(`H√°l√≥zati hiba: ${error.message}`);
        }
        
        statusEl.innerHTML = '';
    }

    // Save Google Services settings
    document.getElementById('google-services-form').addEventListener('submit', async function(e) {
        e.preventDefault();
        
        const statusEl = document.getElementById('google-services-status');
        const submitBtn = this.querySelector('button[type="submit"]');
        const originalBtnText = submitBtn.innerHTML;
        
        statusEl.innerHTML = '<span class="text-info">üíæ Ment√©s...</span>';
        submitBtn.disabled = true;
        submitBtn.innerHTML = '‚è≥ Ment√©s...';
        
        const formData = new FormData(this);
        const data = Object.fromEntries(formData);
        
        try {
            const csrfToken = document.querySelector('meta[name="csrf-token"]')?.getAttribute('content');
            const response = await fetch('/admin/seo/settings', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRF-Token': csrfToken
                },
                body: JSON.stringify(data)
            });
            
            const result = await response.json();
            
            if (result.success) {
                await UniversalModal.success(result.message);
                statusEl.innerHTML = '';
            } else {
                await UniversalModal.error(result.message);
                statusEl.innerHTML = '';
            }
        } catch (error) {
            console.error('Error saving Google services settings:', error);
            await UniversalModal.error(`H√°l√≥zati hiba: ${error.message}`);
            statusEl.innerHTML = '';
        } finally {
            submitBtn.disabled = false;
            submitBtn.innerHTML = originalBtnText;
        }
    });

    // Save Keywords Form
    document.getElementById('keywords-form').addEventListener('submit', async function(e) {
        e.preventDefault();
        
        const statusEl = document.getElementById('keywords-status');
        const submitBtn = this.querySelector('button[type="submit"]');
        const originalBtnText = submitBtn.innerHTML;
        
        submitBtn.disabled = true;
        submitBtn.innerHTML = '‚è≥ Ment√©s...';
        statusEl.innerHTML = '';
        
        const formData = new FormData(this);
        const data = {};
        
        formData.forEach((value, key) => {
            data[key] = value;
        });
        
        try {
            const csrfToken = document.querySelector('meta[name="csrf-token"]')?.getAttribute('content');
            const response = await fetch('/admin/seo/settings', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRF-Token': csrfToken
                },
                body: JSON.stringify(data)
            });
            
            const result = await response.json();
            
            if (result.success) {
                await UniversalModal.success(result.message);
                statusEl.innerHTML = '';
            } else {
                await UniversalModal.error(result.message);
                statusEl.innerHTML = '';
            }
        } catch (error) {
            console.error('Error saving keywords:', error);
            await UniversalModal.error(`H√°l√≥zati hiba: ${error.message}`);
            statusEl.innerHTML = '';
        } finally {
            submitBtn.disabled = false;
            submitBtn.innerHTML = originalBtnText;
        }
    });

    // Toggle GTM Guide
    function toggleGtmGuide() {
        const guide = document.getElementById('gtm-guide');
        if (guide.style.display === 'none' || guide.style.display === '') {
            guide.style.display = 'block';
            guide.scrollIntoView({ behavior: 'smooth', block: 'nearest' });
        } else {
            guide.style.display = 'none';
        }
    }

    // Show Robots.txt Preview
    async function showRobotsPreview() {
        const modal = document.getElementById('robots-preview-modal');
        const contentEl = document.getElementById('robots-content');
        const statsEl = document.getElementById('robots-stats');
        
        modal.style.display = 'block';
        contentEl.textContent = 'üîÑ Bet√∂lt√©s...';
        statsEl.style.display = 'none';
        
        try {
            const response = await fetch('/admin/seo/robots-preview');
            const data = await response.json();
            
            if (data.success) {
                contentEl.textContent = data.content;
                
                // Display stats if available
                if (data.stats) {
                    const stats = data.stats;
                    statsEl.innerHTML = `
                        <div class="modal-preview-stats-grid">
                            <div><strong>Sorok:</strong> ${stats.totalLines}</div>
                            <div><strong>User-agents:</strong> ${stats.userAgents}</div>
                            <div><strong>Disallow:</strong> ${stats.disallowRules}</div>
                            <div><strong>Allow:</strong> ${stats.allowRules}</div>
                            <div><strong>Sitemaps:</strong> ${stats.sitemaps}</div>
                            <div><strong>M√©ret:</strong> ${stats.size} byte</div>
                        </div>
                    `;
                    statsEl.style.display = 'block';
                }
            } else {
                contentEl.textContent = '‚ùå Hiba a bet√∂lt√©s sor√°n: ' + data.message;
            }
        } catch (error) {
            contentEl.textContent = '‚ùå Hiba: ' + error.message;
        }
    }

    // Close Robots.txt Preview
    function closeRobotsPreview() {
        document.getElementById('robots-preview-modal').style.display = 'none';
    }

    // Show Sitemap.xml Preview
    async function showSitemapPreview() {
        const modal = document.getElementById('sitemap-preview-modal');
        const contentEl = document.getElementById('sitemap-content');
        const statsEl = document.getElementById('sitemap-stats');
        
        modal.style.display = 'block';
        contentEl.textContent = 'üîÑ Bet√∂lt√©s...';
        statsEl.style.display = 'none';
        
        try {
            const response = await fetch('/sitemap.xml');
            const text = await response.text();
            
            if (response.ok) {
                contentEl.textContent = text;
                
                // Parse and display stats
                const parser = new DOMParser();
                const xmlDoc = parser.parseFromString(text, 'text/xml');
                const urls = xmlDoc.getElementsByTagName('url');
                const lastmod = xmlDoc.getElementsByTagName('lastmod');
                const changefreq = xmlDoc.getElementsByTagName('changefreq');
                const priority = xmlDoc.getElementsByTagName('priority');
                
                statsEl.innerHTML = `
                    <div class="modal-preview-stats-grid">
                        <div><strong>URL-ek:</strong> ${urls.length}</div>
                        <div><strong>Lastmod:</strong> ${lastmod.length}</div>
                        <div><strong>Changefreq:</strong> ${changefreq.length}</div>
                        <div><strong>Priority:</strong> ${priority.length}</div>
                        <div><strong>M√©ret:</strong> ${(text.length / 1024).toFixed(2)} KB</div>
                        <div><strong>Karakterek:</strong> ${text.length}</div>
                    </div>
                `;
                statsEl.style.display = 'block';
            } else {
                contentEl.textContent = '‚ùå Hiba a bet√∂lt√©s sor√°n: ' + response.status;
            }
        } catch (error) {
            contentEl.textContent = '‚ùå Hiba: ' + error.message;
        }
    }

    // Close Sitemap.xml Preview
    function closeSitemapPreview() {
        document.getElementById('sitemap-preview-modal').style.display = 'none';
    }

    // Close modal on background click
    document.addEventListener('click', (e) => {
        const robotsModal = document.getElementById('robots-preview-modal');
        const sitemapModal = document.getElementById('sitemap-preview-modal');
        
        if (e.target === robotsModal) {
            closeRobotsPreview();
        }
        if (e.target === sitemapModal) {
            closeSitemapPreview();
        }
    });

    // Load info on page load
    window.addEventListener('DOMContentLoaded', () => {
        loadSitemapInfo();
    });
</script>
