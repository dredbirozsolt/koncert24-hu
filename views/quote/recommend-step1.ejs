<main class="quote-wizard">
  <div class="quote-wizard__container">
    
    <!-- Progress Bar -->
    <div class="quote-wizard__progress">
      <div class="quote-wizard__progress-bar">
        <div class="quote-wizard__progress-fill progress-33"></div>
      </div>
      <div class="quote-wizard__progress-text">1. lépés / 3</div>
    </div>

      <!-- Back Button -->
      <a href="<%= basePath %>alternative" class="btn btn--secondary mb-6">
        <svg width="20" height="20" fill="currentColor" viewBox="0 0 20 20">
          <path fill-rule="evenodd" d="M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z" clip-rule="evenodd"/>
        </svg>
        Vissza az előadóhoz
      </a>

      <!-- Step Title -->
      <h1 class="quote-wizard__title">Mesélj kicsit az eseményedről!</h1>
      <p class="quote-wizard__subtitle">Adj meg néhány alapvető információt a rendezvényedről.</p>

      <!-- Form -->
      <form id="step1-form" class="quote-wizard__form">
        
        <!-- Date -->
        <div class="form-group">
          <label for="eventDate" class="form-label">
            Melyik napon rendeznéd az eseményt? <span class="required">*</span>
          </label>
          <div class="date-picker" x-data="quoteDatePicker()" x-init="init()">
            <div class="selected-date-display" @click="showCalendar = !showCalendar" tabindex="0">
              <div class="date-display">
                <span x-show="!selectedDate" class="placeholder">Válassz dátumot</span>
                <span x-show="selectedDate" class="selected-date-text" x-text="formatSelectedDate()"></span>
              </div>
              <svg class="dropdown-icon" :class="{ 'rotate-180': showCalendar }" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd" />
              </svg>
            </div>
            
            <!-- Calendar Popup -->
            <div x-show="showCalendar" 
              x-transition:enter="transition ease-out duration-200"
              x-transition:enter-start="opacity-0 scale-95"
              x-transition:enter-end="opacity-100 scale-100"
              x-transition:leave="transition ease-in duration-150"
              x-transition:leave-start="opacity-100 scale-100"
              x-transition:leave-end="opacity-0 scale-95"
              @click.outside="showCalendar = false" 
              class="calendar-popup">
              <!-- Calendar Header -->
              <div class="calendar-header">
                <button type="button" @click="previousMonth()" class="nav-button">
                  <svg viewBox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd" />
                  </svg>
                </button>
                <h3 class="month-year" x-text="formatMonthYear()"></h3>
                <button type="button" @click="nextMonth()" class="nav-button">
                  <svg viewBox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
                  </svg>
                </button>
              </div>
              
              <!-- Days of Week -->
              <div class="weekdays">
                <div class="weekday">H</div>
                <div class="weekday">K</div>
                <div class="weekday">Sze</div>
                <div class="weekday">Cs</div>
                <div class="weekday">P</div>
                <div class="weekday">Szo</div>
                <div class="weekday">V</div>
              </div>
              
              <!-- Calendar Grid -->
              <div class="calendar-grid">
                <template x-for="date in calendarDates" :key="date.key">
                  <button type="button" @click="selectDate(date)" :disabled="date.disabled" :class="{'calendar-day': true, 'other-month': date.otherMonth, 'selected': date.selected, 'today': date.today, 'disabled': date.disabled}" x-text="date.day"></button>
                </template>
              </div>
            </div>
          </div>
          <label class="checkbox-label">
            <input type="checkbox" name="eventDateFlexible" id="eventDateFlexible" <%= quoteData.eventDateFlexible ? 'checked' : '' %>>
            <span>Nem fix még az esemény dátuma</span>
          </label>
          <input type="hidden" name="eventDate" id="eventDate" value="<%= quoteData.eventDate || '' %>" required>
        </div>

        <!-- Time -->
        <div class="form-group">
          <label for="eventTime" class="form-label">
            Hány órakor kezdődjön az esemény? <span class="required">*</span>
          </label>
          <div class="time-picker" x-data="quoteTimePicker()" x-init="init()">
            <div class="selected-time-display" @click="showTimePicker = !showTimePicker" tabindex="0">
              <div class="time-display">
                <span x-show="!selectedHour && !selectedMinute" class="placeholder">Válassz időpontot</span>
                <span x-show="selectedHour !== null && selectedMinute !== null" class="selected-time-text" x-text="selectedHour + ':' + selectedMinute"></span>
              </div>
              <svg class="dropdown-icon" :class="{ 'rotate-180': showTimePicker }" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd" />
              </svg>
            </div>
            
            <!-- Time Picker Popup -->
            <div x-show="showTimePicker" 
              x-transition:enter="transition ease-out duration-200"
              x-transition:enter-start="opacity-0 scale-95"
              x-transition:enter-end="opacity-100 scale-100"
              x-transition:leave="transition ease-in duration-150"
              x-transition:leave-start="opacity-100 scale-100"
              x-transition:leave-end="opacity-0 scale-95"
              @click.outside="handleTimePickerClose()" 
              class="time-picker-popup">
              <h4 class="time-title">Időpont kiválasztása</h4>
              <div class="time-picker-container">
                <!-- Hour Wheel -->
                <div class="wheel-picker hour-wheel">
                  <div class="wheel-label">Óra</div>
                  <div class="wheel-container" @wheel.prevent="handleHourWheel($event)" @touchstart="handleHourTouchStart($event)" @touchmove.prevent="handleHourTouchMove($event)" @touchend="handleHourTouchEnd($event)">
                    <div class="wheel-mask">
                      <div class="wheel-selection-overlay"></div>
                      <div class="wheel-items" :style="`transform: translateY(${hourOffset}px)`">
                        <template x-for="(hour, index) in availableHours" :key="index">
                          <div class="wheel-item" :class="{ 'selected': index === selectedHourIndex }" @click="selectHour(index)" x-text="hour"></div>
                        </template>
                      </div>
                    </div>
                  </div>
                </div>

                <div class="time-separator-wheel">:</div>

                <!-- Minute Wheel -->
                <div class="wheel-picker minute-wheel">
                  <div class="wheel-label">Perc</div>
                  <div class="wheel-container" @wheel.prevent="handleMinuteWheel($event)" @touchstart="handleMinuteTouchStart($event)" @touchmove.prevent="handleMinuteTouchMove($event)" @touchend="handleMinuteTouchEnd($event)">
                    <div class="wheel-mask">
                      <div class="wheel-selection-overlay"></div>
                      <div class="wheel-items" :style="`transform: translateY(${minuteOffset}px)`">
                        <template x-for="(minute, index) in availableMinutes" :key="index">
                          <div class="wheel-item" :class="{ 'selected': index === selectedMinuteIndex }" @click="selectMinute(index)" x-text="minute"></div>
                        </template>
                      </div>
                    </div>
                  </div>
                </div>
              </div>

              <!-- Action Buttons -->
              <div class="time-picker-actions">
                <button type="button" @click="confirmTime()" class="confirm-btn">Időpont megerősítése</button>
              </div>
            </div>
          </div>
          <input type="hidden" name="eventTime" id="eventTime" value="<%= quoteData.eventTime || '' %>" required>
          
          <!-- Time Flexible Checkbox -->
          <div class="form-group-inline mt-3">
            <label class="checkbox-label">
              <input type="checkbox" name="eventTimeFlexible" id="eventTimeFlexible" <%= quoteData.eventTimeFlexible ? 'checked' : '' %>>
              <span>Még nem fix az időpont</span>
            </label>
          </div>
        </div>

        <!-- Location -->
        <div class="form-group">
          <label for="eventLocation" class="form-label">
            Hol rendeznéd az eseményt? <span class="required">*</span>
          </label>
          <div class="location-search" x-data="quoteLocationSearch()" x-init="query = '<%= quoteData.eventLocation || '' %>'">
            <input 
              type="text" 
              class="form-input" 
              placeholder="Írd be a helységnevet" 
              x-model="query"
              @input="handleInput()" 
              @focus="showSuggestions = true" 
              @blur="hideSuggestions()"
              @keydown.arrow-down.prevent="highlightNext()" 
              @keydown.arrow-up.prevent="highlightPrevious()"
              @keydown.enter.prevent="selectHighlighted()" 
              @keydown.escape="hideSuggestions()" 
              autocomplete="off">
            <div class="location-suggestions" x-show="showSuggestions && suggestions.length > 0" x-transition>
              <template x-for="(suggestion, index) in suggestions" :key="index">
                <div class="suggestion-item" 
                  :class="{ 'highlighted': index === highlightedIndex }"
                  @mousedown.prevent="selectLocation(suggestion)" 
                  @mouseenter="highlightedIndex = index">
                  <div class="suggestion-name" x-text="suggestion.name"></div>
                  <div class="suggestion-country" x-text="suggestion.country"></div>
                </div>
              </template>
            </div>
          </div>
          <input type="hidden" name="eventLocation" id="eventLocation" value="<%= quoteData.eventLocation || '' %>" required>
        </div>

        <!-- Number of Performers -->
        <div class="form-group">
          <label class="form-label">
            Egy vagy több előadót szeretnél? <span class="required">*</span>
          </label>
          <div class="radio-group">
            <label class="radio-card">
              <input type="radio" name="performerCount" value="1" <%= quoteData.performerCount === '1' ? 'checked' : '' %> required>
              <span>Egy előadó</span>
            </label>
            <label class="radio-card">
              <input type="radio" name="performerCount" value="multiple" <%= quoteData.performerCount === 'multiple' ? 'checked' : '' %>>
              <span>Több előadó</span>
            </label>
          </div>
        </div>

        <!-- Budget -->
        <div class="form-group">
          <label for="budget" class="form-label">
            Költségkeret <span class="required">*</span>
          </label>
          <div class="budget-slider" x-data="budgetSlider(<%= minBudget %>, <%= maxBudget %>, <%= quoteData.budget || 0 %>)" x-init="$watch('sliderValue', value => { document.getElementById('budget').value = budget; })">
            <div class="budget-display">
              <span class="budget-value" x-text="formatBudget()"></span>
            </div>
            <input 
              type="range" 
              class="budget-range" 
              x-model="sliderValue"
              min="0" 
              max="100" 
              step="1">
            <div class="budget-labels">
              <span><%= new Intl.NumberFormat('hu-HU').format(minBudget) %> Ft</span>
              <span><%= new Intl.NumberFormat('hu-HU').format(Math.round(minBudget * 3)) %> Ft</span>
              <span><%= new Intl.NumberFormat('hu-HU').format(Math.round(maxBudget / 10)) %> Ft</span>
              <span><%= new Intl.NumberFormat('hu-HU').format(maxBudget) %> Ft</span>
            </div>
          </div>
          <input type="hidden" name="budget" id="budget" value="<%= quoteData.budget || '' %>" required>
          <small class="form-hint">A csúszka az alacsonyabb értékeknél érzékenyebb</small>
        </div>

        <!-- Styles Multi-Select -->
        <div class="form-group">
          <label class="form-label">
            Preferált stílus(ok) <span class="required">*</span>
          </label>
          <small class="form-hint">Válassz egy vagy több stílust</small>
          <div class="checkbox-group grid-auto-sm mt-3">
            <%
              const selectedStyles = quoteData.styles || [];
            %>
            <label class="checkbox-label">
              <input type="checkbox" name="styles" value="Dj" <%= selectedStyles.includes('Dj') ? 'checked' : '' %>>
              <span>Dj</span>
            </label>
            <label class="checkbox-label">
              <input type="checkbox" name="styles" value="Egyéb" <%= selectedStyles.includes('Egyéb') ? 'checked' : '' %>>
              <span>Egyéb</span>
            </label>
            <label class="checkbox-label">
              <input type="checkbox" name="styles" value="Folk - World - Country" <%= selectedStyles.includes('Folk - World - Country') ? 'checked' : '' %>>
              <span>Folk - World - Country</span>
            </label>
            <label class="checkbox-label">
              <input type="checkbox" name="styles" value="Gyermekműsor" <%= selectedStyles.includes('Gyermekműsor') ? 'checked' : '' %>>
              <span>Gyermekműsor</span>
            </label>
            <label class="checkbox-label">
              <input type="checkbox" name="styles" value="Jazz - Blues - Swing" <%= selectedStyles.includes('Jazz - Blues - Swing') ? 'checked' : '' %>>
              <span>Jazz - Blues - Swing</span>
            </label>
            <label class="checkbox-label">
              <input type="checkbox" name="styles" value="Mulatós" <%= selectedStyles.includes('Mulatós') ? 'checked' : '' %>>
              <span>Mulatós</span>
            </label>
            <label class="checkbox-label">
              <input type="checkbox" name="styles" value="Musical - Operett" <%= selectedStyles.includes('Musical - Operett') ? 'checked' : '' %>>
              <span>Musical - Operett</span>
            </label>
            <label class="checkbox-label">
              <input type="checkbox" name="styles" value="Party zenekar" <%= selectedStyles.includes('Party zenekar') ? 'checked' : '' %>>
              <span>Party zenekar</span>
            </label>
            <label class="checkbox-label">
              <input type="checkbox" name="styles" value="Pop" <%= selectedStyles.includes('Pop') ? 'checked' : '' %>>
              <span>Pop</span>
            </label>
            <label class="checkbox-label">
              <input type="checkbox" name="styles" value="Rap - Hip-Hop - Trap" <%= selectedStyles.includes('Rap - Hip-Hop - Trap') ? 'checked' : '' %>>
              <span>Rap - Hip-Hop - Trap</span>
            </label>
            <label class="checkbox-label">
              <input type="checkbox" name="styles" value="Retro" <%= selectedStyles.includes('Retro') ? 'checked' : '' %>>
              <span>Retro</span>
            </label>
            <label class="checkbox-label">
              <input type="checkbox" name="styles" value="Rock" <%= selectedStyles.includes('Rock') ? 'checked' : '' %>>
              <span>Rock</span>
            </label>
            <label class="checkbox-label">
              <input type="checkbox" name="styles" value="Stand-up - Humor" <%= selectedStyles.includes('Stand-up - Humor') ? 'checked' : '' %>>
              <span>Stand-up - Humor</span>
            </label>
            <label class="checkbox-label">
              <input type="checkbox" name="styles" value="Színház" <%= selectedStyles.includes('Színház') ? 'checked' : '' %>>
              <span>Színház</span>
            </label>
            <label class="checkbox-label">
              <input type="checkbox" name="styles" value="Tribute" <%= selectedStyles.includes('Tribute') ? 'checked' : '' %>>
              <span>Tribute</span>
            </label>
            <label class="checkbox-label">
              <input type="checkbox" name="styles" value="Táncprodukció" <%= selectedStyles.includes('Táncprodukció') ? 'checked' : '' %>>
              <span>Táncprodukció</span>
            </label>
          </div>
        </div>

        <!-- Event Type (singular) -->
        <div class="form-group">
          <label for="eventType" class="form-label">
            Milyen műsor típusú eseményt szeretnél rendezni? <span class="required">*</span>
          </label>
          <select name="eventType" id="eventType" class="form-input" required>
            <option value="">Válassz műsor típust</option>
            <option value="outdoor_free" <%= quoteData.eventType === 'outdoor_free' ? 'selected' : '' %>>Nyilvános ingyenes rendezvény szabadtéren</option>
            <option value="outdoor_paid" <%= quoteData.eventType === 'outdoor_paid' ? 'selected' : '' %>>Nyilvános belépőjegyes rendezvény szabadtéren</option>
            <option value="indoor_free" <%= quoteData.eventType === 'indoor_free' ? 'selected' : '' %>>Nyilvános ingyenes rendezvény zárt helyiségben</option>
            <option value="indoor_paid" <%= quoteData.eventType === 'indoor_paid' ? 'selected' : '' %>>Nyilvános belépőjegyes rendezvény zárt helyiségben</option>
            <option value="private_personal" <%= quoteData.eventType === 'private_personal' ? 'selected' : '' %>>Zártkörű magánrendezvény</option>
            <option value="private_corporate" <%= quoteData.eventType === 'private_corporate' ? 'selected' : '' %>>Zártkörű céges rendezvény</option>
          </select>
        </div>

        <!-- Guest Count -->
        <div class="form-group">
          <label class="form-label">
            Várható vendégszám <span class="required">*</span>
          </label>
          <div class="radio-group">
            <label class="radio-card">
              <input type="radio" name="guestCount" value="<100" <%= quoteData.guestCount === '<100' ? 'checked' : '' %> required>
              <span>Kevesebb mint 100 fő</span>
            </label>
            <label class="radio-card">
              <input type="radio" name="guestCount" value="100-300" <%= quoteData.guestCount === '100-300' ? 'checked' : '' %>>
              <span>100 - 300 fő</span>
            </label>
            <label class="radio-card">
              <input type="radio" name="guestCount" value="300-800" <%= quoteData.guestCount === '300-800' ? 'checked' : '' %>>
              <span>300 - 800 fő</span>
            </label>
            <label class="radio-card">
              <input type="radio" name="guestCount" value="800+" <%= quoteData.guestCount === '800+' ? 'checked' : '' %>>
              <span>800+ fő</span>
            </label>
          </div>
        </div>

        <!-- Event Name -->
        <div class="form-group">
          <label for="eventName" class="form-label">
            Rendezvény elnevezése <span class="required">*</span>
          </label>
          <input 
            type="text" 
            id="eventName" 
            name="eventName" 
            class="form-input" 
            placeholder="Pl. Eperfesztivál, Ballagás, Karácsonyi buli"
            value="<%= quoteData.eventName || '' %>"
            required>
        </div>

        <!-- Event Category -->
        <div class="form-group">
          <label for="eventCategory" class="form-label">
            Esemény jellege <span class="required">*</span>
          </label>
          <select id="eventCategory" name="eventCategory" class="form-input" required>
            <option value="">Válassz kategóriát</option>
            <option value="magánrendezvény" <%= quoteData.eventCategory === 'magánrendezvény' ? 'selected' : '' %>>Magánrendezvény</option>
            <option value="céges rendezvény" <%= quoteData.eventCategory === 'céges rendezvény' ? 'selected' : '' %>>Céges rendezvény</option>
            <option value="falunap" <%= quoteData.eventCategory === 'falunap' ? 'selected' : '' %>>Falunap</option>
            <option value="fesztivál" <%= quoteData.eventCategory === 'fesztivál' ? 'selected' : '' %>>Fesztivál</option>
            <option value="városi ünnep" <%= quoteData.eventCategory === 'városi ünnep' ? 'selected' : '' %>>Városi ünnep</option>
            <option value="iskolai rendezvény" <%= quoteData.eventCategory === 'iskolai rendezvény' ? 'selected' : '' %>>Iskolai rendezvény</option>
            <option value="egyéb" <%= quoteData.eventCategory === 'egyéb' ? 'selected' : '' %>>Egyéb</option>
          </select>
        </div>

        <!-- Submit Button -->
        <div class="form-actions form-actions--split">
          <a href="<%= basePath %>alternative" class="btn btn--secondary btn--large">
            <svg width="20" height="20" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z" clip-rule="evenodd"/>
            </svg>
            Vissza az előadóhoz
          </a>
          <button type="submit" class="btn btn--primary btn--large">
            Tovább a következő lépésre
            <svg width="20" height="20" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z" clip-rule="evenodd"/>
            </svg>
          </button>
        </div>

      </form>

    </div>
  </main>

  <!-- Custom CSS for this page -->
  <link rel="stylesheet" href="<%= basePath %>css/pages/quote-wizard.css">
  <link rel="stylesheet" href="<%= basePath %>css/modules/booking-system.css">
  
  <!-- Custom JS for this page -->
  <script src="<%= basePath %>js/pages/quote-date-picker.js"></script>
  <script src="<%= basePath %>js/pages/quote-time-picker.js"></script>
  <script src="<%= basePath %>js/pages/quote-location-search.js"></script>
  <script src="<%= basePath %>js/pages/quote-wizard-recommend.js"></script>
  
  <script>
    // Handle time flexible checkbox
    document.addEventListener('DOMContentLoaded', function() {
      const timeFlexibleCheckbox = document.getElementById('eventTimeFlexible');
      const timeInput = document.getElementById('eventTime');
      const timeDisplay = document.querySelector('.selected-time-display');
      
      if (timeFlexibleCheckbox && timeDisplay) {
        function updateTimeInputState() {
          if (timeFlexibleCheckbox.checked) {
            timeInput.required = false;
            // Don't clear the value - keep it for display purposes
            timeDisplay.style.opacity = '0.5';
            timeDisplay.style.pointerEvents = 'none';
            timeDisplay.style.cursor = 'not-allowed';
          } else {
            timeInput.required = true;
            timeDisplay.style.opacity = '1';
            timeDisplay.style.pointerEvents = 'auto';
            timeDisplay.style.cursor = 'pointer';
          }
        }
        
        // Initialize state
        updateTimeInputState();
        
        // Listen for checkbox changes
        timeFlexibleCheckbox.addEventListener('change', updateTimeInputState);
      }

      // Handle date flexible checkbox
      const dateFlexibleCheckbox = document.getElementById('eventDateFlexible');
      const dateInput = document.getElementById('eventDate');
      const dateDisplay = document.querySelector('.selected-date-display');
      
      if (dateFlexibleCheckbox && dateDisplay) {
        function updateDateInputState() {
          if (dateFlexibleCheckbox.checked) {
            dateInput.required = false;
            // Don't clear the value - keep it for display purposes
            dateDisplay.style.opacity = '0.5';
            dateDisplay.style.pointerEvents = 'none';
            dateDisplay.style.cursor = 'not-allowed';
          } else {
            dateInput.required = true;
            dateDisplay.style.opacity = '1';
            dateDisplay.style.pointerEvents = 'auto';
            dateDisplay.style.cursor = 'pointer';
          }
        }
        
        // Initialize state
        updateDateInputState();
        
        // Listen for checkbox changes
        dateFlexibleCheckbox.addEventListener('change', updateDateInputState);
      }
    });

    // Budget Slider Component with logarithmic scale
    function budgetSlider(minBudget, maxBudget, savedBudget = 0) {
      return {
        sliderValue: 50, // 0-100 scale
        minBudget: minBudget,
        maxBudget: maxBudget,
        
        init() {
          // Restore saved budget if exists
          if (savedBudget > 0) {
            this.budget = savedBudget;
          }
          
          // Set initial value
          const budgetInput = document.getElementById('budget');
          if (budgetInput) {
            budgetInput.value = this.budget;
          }
        },
        
        get budget() {
          // Convert linear slider (0-100) to logarithmic budget
          // Using exponential curve: budget = min * (max/min)^(slider/100)
          const ratio = this.maxBudget / this.minBudget;
          const budget = this.minBudget * Math.pow(ratio, this.sliderValue / 100);
          return Math.round(budget / 1000) * 1000; // Round to nearest 1000
        },
        
        set budget(value) {
          // Convert budget back to slider value
          const ratio = this.maxBudget / this.minBudget;
          this.sliderValue = (Math.log(value / this.minBudget) / Math.log(ratio)) * 100;
        },
        
        formatBudget(value) {
          if (!value) value = this.budget;
          return new Intl.NumberFormat('hu-HU').format(value) + ' Ft';
        },
        
        // Generate marks for display
        getMarks() {
          const marks = [];
          let value = this.minBudget;
          while (value <= this.maxBudget) {
            marks.push(value);
            if (value < 100000) {
              value += 10000; // 10k steps up to 100k
            } else if (value < 1000000) {
              value += 100000; // 100k steps up to 1M
            } else {
              value += 1000000; // 1M steps above 1M
            }
          }
          if (marks[marks.length - 1] !== this.maxBudget) {
            marks.push(this.maxBudget);
          }
          return marks;
        }
      };
    }
  </script>
  
  <style>
    .budget-slider {
      padding: 20px 0;
    }
    
    .budget-display {
      text-align: center;
      margin-bottom: 24px;
    }
    
    .budget-value {
      font-size: 32px;
      font-weight: 700;
      color: var(--color-primary-600);
    }
    
    .budget-range {
      width: 100%;
      height: 8px;
      -webkit-appearance: none;
      appearance: none;
      background: linear-gradient(to right, var(--color-primary-100) 0%, var(--color-primary-600) 100%);
      border-radius: 4px;
      outline: none;
      cursor: pointer;
    }
    
    .budget-range::-webkit-slider-thumb {
      -webkit-appearance: none;
      appearance: none;
      width: 24px;
      height: 24px;
      background: var(--color-primary-600);
      border-radius: 50%;
      cursor: pointer;
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
      transition: transform 0.2s ease;
    }
    
    .budget-range::-webkit-slider-thumb:hover {
      transform: scale(1.1);
    }
    
    .budget-range::-moz-range-thumb {
      width: 24px;
      height: 24px;
      background: var(--color-primary-600);
      border-radius: 50%;
      cursor: pointer;
      border: none;
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
      transition: transform 0.2s ease;
    }
    
    .budget-range::-moz-range-thumb:hover {
      transform: scale(1.1);
    }
    
    .budget-labels {
      display: flex;
      justify-content: space-between;
      margin-top: 8px;
      font-size: 12px;
      color: var(--text-tertiary);
      gap: 8px;
    }
    
    .budget-labels span {
      flex: 0 0 auto;
      text-align: center;
    }
    
    .budget-labels span:first-child {
      text-align: left;
    }
    
    .budget-labels span:last-child {
      text-align: right;
    }
  </style>
