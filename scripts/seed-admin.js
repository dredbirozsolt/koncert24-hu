#!/usr/bin/env node
require('dotenv').config();
const { sequelize, User } = require('../models');
const crypto = require('crypto');

function displayExistingAdmin(existingAdmin) {
  console.log('‚ö†Ô∏è  Admin felhaszn√°l√≥ m√°r l√©tezik:');
  console.log(`   Email: ${existingAdmin.email}`);
  console.log(`   N√©v: ${existingAdmin.name}`);
  console.log('\nHa √∫j admin usert szeretn√©l, haszn√°ld a set-admin.js scriptet.');
}

function displayNewAdminCredentials(adminUser, password) {
  console.log('‚úÖ Admin felhaszn√°l√≥ sikeresen l√©trehozva!\n');
  console.log('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê');
  console.log('üìß Email:', adminUser.email);
  console.log('üë§ N√©v:', adminUser.name);
  console.log('üîë Jelsz√≥:', password);
  console.log('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê');
  console.log('\n‚ö†Ô∏è  FONTOS: Mentsd el a jelsz√≥t biztons√°gos helyre!');
  console.log('üí° Bejelentkez√©s ut√°n v√°ltoztasd meg a jelsz√≥t!\n');
  console.log('üåê Bejelentkez√©s: http://localhost:3000/auth/login');
}

/**
 * Create initial admin user if none exists
 * Usage: node scripts/seed-admin.js [email] [name]
 */
(async () => {
  try {
    // Check if any admin user exists
    const existingAdmin = await User.findOne({ where: { role: 'admin' } });

    if (existingAdmin) {
      displayExistingAdmin(existingAdmin);
      await sequelize.close();
      process.exit(0);
    }

    // Get email and name from command line or use defaults
    const email = process.argv[2] || 'admin@koncert24.hu';
    const name = process.argv[3] || 'Admin User';

    // Generate random password
    const password = crypto.randomBytes(12).toString('base64').slice(0, 16);
    const phone = '+36301234567';

    // Create admin user
    const adminUser = await User.create({
      name,
      email,
      phone,
      password,
      role: 'admin',
      isActive: true,
      emailVerified: true
    });

    displayNewAdminCredentials(adminUser, password);

    await sequelize.close();
  } catch (e) {
    console.error('‚ùå Hiba:', e.message);
    await sequelize.close();
    process.exit(1);
  }
})();
