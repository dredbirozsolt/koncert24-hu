/**
 * Email Template Service - Booking Email Generators
 * Handles booking-related email template generation
 */

/* eslint-disable max-len -- Email templates contain long HTML strings */

/**
 * Generate booking test email content
 * @private
 */
function generateBookingTestContent({ bookingEmail, emailMethod, siteName, renderInfoBox, renderBadge, renderAlertBox, BASE_STYLES }) {
  return `
    <h2 style="${BASE_STYLES.h2}">üéµ Kedves Koll√©g√°k!</h2>
    <p style="${BASE_STYLES.paragraph}">
      Ez egy teszt email a <strong>${siteName}</strong> foglal√°si √©rtes√≠t√©si rendszer m≈±k√∂d√©s√©nek ellen≈ërz√©s√©re.
    </p>

    ${renderInfoBox({
    title: 'üìã Rendszer Inform√°ci√≥k',
    items: [
      `<strong>Teszt id≈ëpontja:</strong> ${new Date().toLocaleString('hu-HU')}`,
      `<strong>Email c√≠m:</strong> ${bookingEmail}`,
      '<strong>C√©lja:</strong> √öj foglal√°sok √©s lemond√°sok',
      `<strong>Email m√≥dszer:</strong> ${renderBadge({
        text: emailMethod.toUpperCase(),
        variant: emailMethod.toLowerCase() === 'oauth2' ? 'success' : 'info'
      })}`
    ]
  })}

    <p style="${BASE_STYLES.paragraph}">
      ‚úÖ <strong>Ha ezt az emailt megkapta, a booking email konfigur√°ci√≥ t√∂k√©letesen m≈±k√∂dik!</strong>
    </p>

    ${renderAlertBox({
    type: 'success',
    title: 'üé§ Ez az √©rtes√≠t√©si csatorna a j√∂v≈ëben aktiv√°l√≥dik:',
    message: `
        <ul style="margin: 10px 0 0 20px; padding: 0;">
          <li style="margin: 5px 0;">üé§ √öj el≈ëad√≥ foglal√°si k√©relmek</li>
          <li style="margin: 5px 0;">üìù Foglal√°si r√©szletek m√≥dos√≠t√°sa</li>
          <li style="margin: 5px 0;">‚ùå Foglal√°sok lemond√°sa</li>
          <li style="margin: 5px 0;">üí∞ Fizet√©si st√°tusz v√°ltoz√°sok</li>
          <li style="margin: 5px 0;">üìß √úgyf√©l kapcsolatfelv√©telek</li>
        </ul>
      `
  })}
  `;
}

/**
 * Generate booking confirmation email content
 * @private
 */
function generateBookingConfirmationContent({ bookingData, bookingEmail, renderInfoBox, renderAlertBox, BASE_STYLES, COLORS }) {
  const eventDate = bookingData.eventDate
    ? new Date(bookingData.eventDate).toLocaleString('hu-HU')
    : 'N/A';

  const qrCodeSection = bookingData.qrCode ? `
    <div style="text-align: center; margin: 30px 0;">
      <p style="${BASE_STYLES.paragraph}"><strong>üì± QR K√≥d a bel√©p√©shez:</strong></p>
      <img src="${bookingData.qrCode}" alt="QR K√≥d" style="max-width: 200px; height: auto;" />
      <p style="${BASE_STYLES.paragraph}; font-size: 12px; color: ${COLORS.gray[600]};">
        Ezt a QR k√≥dot mutassa fel a helysz√≠nen a bel√©p√©shez.
      </p>
    </div>
  ` : '';

  const paymentSection = bookingData.paymentStatus ? renderAlertBox({
    type: bookingData.paymentStatus === 'paid' ? 'success' : 'warning',
    title: bookingData.paymentStatus === 'paid' ? '‚úÖ Fizet√©s Rendezve' : '‚ö†Ô∏è Fizet√©s F√ºgg≈ëben',
    message: bookingData.paymentStatus === 'paid'
      ? 'A foglal√°s √∂sszege rendezve lett. K√∂sz√∂nj√ºk!'
      : 'A foglal√°s √∂sszeg√©t a helysz√≠nen kell rendezni.'
  }) : '';

  const cancellationSection = bookingData.cancellationPolicy ? renderInfoBox({
    title: 'üìã Lemond√°si Felt√©telek',
    items: [bookingData.cancellationPolicy]
  }) : '';

  return `
    <h2 style="${BASE_STYLES.h2}">üéµ Kedves ${bookingData.customerName || 'V√°s√°rl√≥'}!</h2>
    <p style="${BASE_STYLES.paragraph}">
      K√∂sz√∂nj√ºk foglal√°s√°t! Az al√°bbi r√©szletekkel r√∂gz√≠tett√ºk rendel√©s√©t.
    </p>

    ${renderInfoBox({
    title: 'üìã Foglal√°s R√©szletei',
    items: [
      `<strong>Foglal√°s azonos√≠t√≥:</strong> #${bookingData.id}`,
      `<strong>Esem√©ny:</strong> ${bookingData.eventName || 'N/A'}`,
      `<strong>D√°tum:</strong> ${eventDate}`,
      `<strong>Helysz√≠n:</strong> ${bookingData.venueName || 'N/A'}`,
      `<strong>Jegyek sz√°ma:</strong> ${bookingData.ticketCount || 0} db`,
      `<strong>V√©g√∂sszeg:</strong> ${bookingData.totalAmount || 0} Ft`
    ]
  })}

    ${qrCodeSection}
    ${paymentSection}
    ${cancellationSection}

    <p style="${BASE_STYLES.paragraph}">
      K√©rd√©se van? √çrjon nek√ºnk: <a href="mailto:${bookingEmail}" style="${BASE_STYLES.link}">${bookingEmail}</a>
    </p>
  `;
}

/**
 * Generate booking email template
 * @param {Object} params - Booking email parameters
 * @param {string} params.bookingEmail - Booking email address
 * @param {string} params.siteName - Site name
 * @param {string} params.companyName - Company name
 * @param {string} params.emailMethod - Email method (oauth2/smtp)
 * @param {Object} params.bookingData - Optional booking data for confirmation emails
 * @param {Object} helpers - Template helper functions
 * @returns {Object} Email subject, html, and text
 */
function generateBookingEmail(
  { bookingEmail, siteName, companyName, emailMethod, bookingData = null },
  { renderHeader, renderFooter, renderInfoBox, renderBadge, renderAlertBox, renderBaseLayout, BASE_STYLES, COLORS }
) {
  const isTestEmail = !bookingData;
  const variant = isTestEmail ? 'success' : 'info';

  // Subject
  const subject = isTestEmail
    ? `üìÖ Foglal√°si √ârtes√≠t√©si Teszt - ${siteName}`
    : `üìÖ Foglal√°s Meger≈ës√≠t√©s - ${siteName}`;

  // Header content
  const headerTitle = isTestEmail ? 'üìÖ Booking Email Teszt' : 'üìÖ Foglal√°s Meger≈ës√≠t√©s';
  const headerSubtitle = isTestEmail
    ? `Foglal√°si √ârtes√≠t√©si Teszt - ${siteName}`
    : `Foglal√°s: #${bookingData?.id || 'N/A'}`;

  // Main content
  const mainContent = isTestEmail
    ? generateBookingTestContent({ bookingEmail, emailMethod, siteName, renderInfoBox, renderBadge, renderAlertBox, BASE_STYLES })
    : generateBookingConfirmationContent({ bookingData, bookingEmail, renderInfoBox, renderAlertBox, BASE_STYLES, COLORS });

  // Generate full HTML
  const html = renderBaseLayout({
    title: subject,
    headerHtml: renderHeader({ title: headerTitle, subtitle: headerSubtitle, variant }),
    contentHtml: mainContent,
    footerHtml: renderFooter({ siteName, companyName })
  });

  // Text version
  const text = isTestEmail
    ? `Booking Email Teszt

Kedves Koll√©g√°k!

Ez egy teszt email a foglal√°si √©rtes√≠t√©si rendszer m≈±k√∂d√©s√©nek ellen≈ërz√©s√©re.

Rendszer inform√°ci√≥k:
- Teszt id≈ëpontja: ${new Date().toLocaleString('hu-HU')}
- Email c√≠m: ${bookingEmail}
- C√©lja: √öj foglal√°sok √©s lemond√°sok
- Email m√≥dszer: ${emailMethod.toUpperCase()}

‚úÖ Ha ezt az emailt megkapta, a booking email konfigur√°ci√≥ t√∂k√©letesen m≈±k√∂dik!

${siteName} - ${companyName}
`
    : `Foglal√°s Meger≈ës√≠t√©s

Kedves ${bookingData?.customerName || 'V√°s√°rl√≥'}!

K√∂sz√∂nj√ºk foglal√°s√°t! Az al√°bbi r√©szletekkel r√∂gz√≠tett√ºk rendel√©s√©t.

Foglal√°s r√©szletei:
- Foglal√°s azonos√≠t√≥: #${bookingData?.id}
- Esem√©ny: ${bookingData?.eventName || 'N/A'}
- D√°tum: ${bookingData?.eventDate ? new Date(bookingData.eventDate).toLocaleString('hu-HU') : 'N/A'}
- Helysz√≠n: ${bookingData?.venueName || 'N/A'}
- Jegyek sz√°ma: ${bookingData?.ticketCount || 0} db
- V√©g√∂sszeg: ${bookingData?.totalAmount || 0} Ft

K√©rd√©se van? √çrjon nek√ºnk: ${bookingEmail}

${siteName} - ${companyName}
`;

  return { subject, html, text };
}

module.exports = {
  generateBookingEmail
};
