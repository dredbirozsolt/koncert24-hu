/**
 * Email Template Service - Part 2
 * Additional email templates with Design System compliance
 * This file extends emailTemplateService.js
 */

// Constants
const DEFAULT_BASE_URL = 'https://koncert24.hu';

// Lazy load to avoid circular dependency
let COLORS;
let BASE_STYLES;
let renderHeader;
let renderFooter;
let renderInfoBox;
let renderAlertBox;
let renderCodeBlock;
let renderBadge;
let renderBaseLayout;

function loadDependencies() {
  if (!COLORS) {
    const emailTemplateService = require('./emailTemplateService');
    ({
      COLORS,
      BASE_STYLES,
      renderHeader,
      renderFooter,
      renderInfoBox,
      renderAlertBox,
      renderCodeBlock,
      renderBadge,
      renderBaseLayout
    } = emailTemplateService);
  }
}

/**
 * Helper: Generate threats content HTML
 */
function generateThreatsContent(threats) {
  if (!threats || threats.length === 0) {
    return '';
  }

  const threatItems = threats.map((threat) => {
    const lastAttemptDate = threat.lastAttempt
      ? new Date(threat.lastAttempt).toLocaleString('hu-HU')
      : 'N/A';
    const items = [
      `<strong>IP c√≠m:</strong> ${threat.ip || 'N/A'}`,
      `<strong>K√≠s√©rletek sz√°ma:</strong> ${threat.count || 0}`,
      `<strong>S√∫lyoss√°g:</strong> ${threat.severity || 'unknown'}`,
      `<strong>Utols√≥ k√≠s√©rlet:</strong> ${lastAttemptDate}`
    ];

    if (threat.actions && threat.actions.length > 0) {
      items.push(`<strong>Akci√≥k:</strong> ${threat.actions.join(', ')}`);
    }

    return renderInfoBox({
      title: `üö® Fenyeget√©s #${threat.id || 'N/A'}`,
      items
    });
  }).join('');

  return `
    <h3 style="${BASE_STYLES.h3}">üîç R√©szletes Inform√°ci√≥k</h3>
    ${threatItems}
  `;
}

/**
 * Helper: Get priority label in Hungarian
 */
function getPriorityLabel(priority) {
  if (priority === 'critical') {
    return 'Kritikus';
  }
  if (priority === 'high') {
    return 'Magas';
  }
  return 'K√∂zepes';
}

/**
 * Helper: Generate main content HTML for security alert
 */
function generateSecurityAlertMainContent({ event, priority, body, priorityLabel, priorityBadge, threatsContent }) {
  const userAgentDisplay = event.userAgent ? `${event.userAgent.substring(0, 50)}...` : 'N/A';
  const eventTimestamp = event.createdAt
    ? new Date(event.createdAt).toLocaleString('hu-HU')
    : new Date().toLocaleString('hu-HU');

  return `
    <h2 style="${BASE_STYLES.h2}">üö® Biztons√°gi Esem√©ny √âszlelve</h2>
    
    ${renderAlertBox({
    type: priority === 'critical' ? 'error' : 'warning',
    title: `‚ö†Ô∏è ${priorityLabel} Priorit√°s√∫ Esem√©ny`,
    message: body || 'Biztons√°gi esem√©ny t√∂rt√©nt a rendszerben.'
  })}

    ${renderInfoBox({
    title: 'üìã Esem√©ny R√©szletei',
    items: [
      `<strong>Esem√©ny t√≠pus:</strong> ${event.eventType || 'N/A'}`,
      `<strong>Esem√©ny ID:</strong> #${event.id || 'N/A'}`,
      `<strong>Id≈ëpont:</strong> ${eventTimestamp}`,
      `<strong>Priorit√°s:</strong> ${priorityBadge}`,
      `<strong>IP c√≠m:</strong> ${event.ip || 'N/A'}`,
      `<strong>User Agent:</strong> ${userAgentDisplay}`
    ]
  })}

    ${threatsContent}

    ${renderAlertBox({
    type: 'info',
    title: 'üõ†Ô∏è Javasolt Int√©zked√©sek',
    message: `
        <ul style="margin: 10px 0 0 20px; padding: 0;">
          <li style="margin: 5px 0;">Ellen≈ërizze a Security Log bejegyz√©seket</li>
          <li style="margin: 5px 0;">Tekintse √°t a gyan√∫s IP c√≠meket</li>
          <li style="margin: 5px 0;">Sz√ºks√©g eset√©n blokkolja a fenyeget√©st jelent≈ë IP c√≠met</li>
          <li style="margin: 5px 0;">Jelentse s√∫lyos esetben az illet√©kes hat√≥s√°goknak</li>
        </ul>
      `
  })}

    <div style="text-align: center; margin: 30px 0;">
      <a href="${process.env.BASE_URL || DEFAULT_BASE_URL}/admin/security-log"
         style="display: inline-block; background: ${COLORS.primary[600]}; color: white;
                padding: 12px 24px; text-decoration: none; border-radius: 6px; font-weight: bold;">
        üîç Security Log Megtekint√©se
      </a>
    </div>

    <p style="${BASE_STYLES.paragraph}; font-size: 12px; color: ${COLORS.gray[500]};">
      <strong>Megjegyz√©s:</strong> Maximum 10 biztons√°gi √©rtes√≠t√©s/√≥ra k√ºld√©se megengedett a spam megel≈ëz√©se √©rdek√©ben.
    </p>
  `;
}

/**
 * Generate security alert email template
 * @param {Object} params - Security alert parameters
 * @param {Object} params.event - Security event data
 * @param {string} params.priority - Priority level (critical/high/medium)
 * @param {string} params.subject - Email subject
 * @param {string} params.body - Email body content
 * @param {Array} params.threats - Array of threat details
 * @returns {Object} Email subject, html, and text
 */
function generateSecurityAlertEmail({ event, priority, subject, body, threats = [] }) {
  loadDependencies();

  const priorityColors = {
    critical: 'error',
    high: 'warning',
    medium: 'info'
  };
  const variant = priorityColors[priority] || 'warning';

  // Header content
  const headerTitle = 'üõ°Ô∏è Biztons√°gi Figyelmeztet√©s';
  const headerBadgeType = priority === 'critical' ? 'error' : 'warning';
  const headerBadge = renderBadge(priority.toUpperCase(), headerBadgeType);
  const headerSubtitle = `${subject} ${headerBadge}`;

  // Threat details section
  const threatsContent = generateThreatsContent(threats);

  // Determine priority label
  const priorityLabel = getPriorityLabel(priority);

  // Priority badge
  const priorityBadgeType = priority === 'critical' ? 'error' : 'warning';
  const priorityBadge = renderBadge(priority.toUpperCase(), priorityBadgeType);

  // Main content
  const mainContent = generateSecurityAlertMainContent({
    event,
    priority,
    body,
    priorityLabel,
    priorityBadge,
    threatsContent
  });

  // Generate full HTML
  const html = renderBaseLayout({
    title: subject,
    headerHtml: renderHeader({ title: headerTitle, subtitle: headerSubtitle, variant }),
    contentHtml: mainContent,
    footerHtml: renderFooter({
      siteName: 'Koncert24.hu',
      companyName: 'Biztons√°gi Monitoring Rendszer',
      additionalText: `SecurityLog ID: #${event.id || 'N/A'}`
    })
  });

  // Text version
  const text = `Biztons√°gi Figyelmeztet√©s

${subject}

Priorit√°s: ${priority.toUpperCase()}

Esem√©ny R√©szletei:
- Esem√©ny t√≠pus: ${event.eventType || 'N/A'}
- Esem√©ny ID: #${event.id || 'N/A'}
- Id≈ëpont: ${event.createdAt ? new Date(event.createdAt).toLocaleString('hu-HU') : new Date().toLocaleString('hu-HU')}
- IP c√≠m: ${event.ip || 'N/A'}
- User Agent: ${event.userAgent || 'N/A'}

${body || 'Biztons√°gi esem√©ny t√∂rt√©nt a rendszerben.'}

Javasolt Int√©zked√©sek:
- Ellen≈ërizze a Security Log bejegyz√©seket
- Tekintse √°t a gyan√∫s IP c√≠meket
- Sz√ºks√©g eset√©n blokkolja a fenyeget√©st jelent≈ë IP c√≠met
- Jelentse s√∫lyos esetben az illet√©kes hat√≥s√°goknak

Security Log: ${process.env.BASE_URL || DEFAULT_BASE_URL}/admin/security-log

¬© ${new Date().getFullYear()} Koncert24.hu - Biztons√°gi Monitoring Rendszer
SecurityLog ID: #${event.id || 'N/A'}`;

  return { subject, html, text };
}

/**
 * Generate password changed notification email
 * @param {Object} params - Password change parameters
 * @param {Object} params.user - User data
 * @param {string} params.siteName - Site name
 * @param {string} params.companyName - Company name
 * @param {string} params.ipAddress - IP address of password change
 * @param {string} params.userAgent - User agent string
 * @returns {Object} Email subject, html, and text
 */
function generatePasswordChangedEmail({ user, siteName, companyName }) {
  loadDependencies();

  const subject = `üîí Jelsz√≥ Megv√°ltoztatva - ${siteName}`;

  const headerTitle = 'üîí Jelsz√≥ Megv√°ltoztatva';
  const headerSubtitle = 'Fi√≥k Biztons√°gi √ârtes√≠t√©s';

  const changeTime = new Date().toLocaleString('hu-HU');

  const mainContent = `
    <h2 style="${BASE_STYLES.h2}">Kedves ${user.name || user.firstName || user.email}!</h2>
    
    <p style="${BASE_STYLES.paragraph}">
      Ez egy biztons√°gi √©rtes√≠t√©s arr√≥l, hogy a fi√≥kodhoz tartoz√≥ jelsz√≥t nemr√©g megv√°ltoztatt√°k.
    </p>

    ${renderAlertBox({
    type: 'success',
    title: '‚úÖ Jelsz√≥ Sikeresen Megv√°ltoztatva',
    message: `A jelsz√≥ megv√°ltoztat√°sa <strong>${changeTime}</strong> id≈ëpontban t√∂rt√©nt.`
  })}

    ${renderAlertBox({
    type: 'warning',
    title: '‚ö†Ô∏è Nem Te V√°ltoztattad Meg?',
    message: `
        Ha <strong>nem te</strong> v√°ltoztattad meg a jelsz√≥t, akkor:
        <ul style="margin: 10px 0 0 20px; padding: 0;">
          <li style="margin: 5px 0;">Azonnal l√©pj be a fi√≥kodba √©s v√°ltoztasd meg a jelsz√≥t</li>
          <li style="margin: 5px 0;">Ellen≈ërizd a legut√≥bbi bejelentkez√©seket</li>
          <li style="margin: 5px 0;">Vedd fel a kapcsolatot az √ºgyf√©lszolg√°lattal</li>
        </ul>
      `
  })}

    <div style="text-align: center; margin: 30px 0;">
      <a href="${process.env.BASE_URL || DEFAULT_BASE_URL}/login"
         style="display: inline-block; background: ${COLORS.primary[600]}; color: white;
                padding: 12px 24px; text-decoration: none; border-radius: 6px; font-weight: bold;">
        üîí Bejelentkez√©s
      </a>
    </div>

    ${renderInfoBox({
    title: 'üîê Biztons√°gi Tippek',
    items: [
      'Haszn√°lj egyedi, er≈ës jelsz√≥t minden fi√≥kodhoz',
      'Ne oszd meg jelszavad m√°sokkal',
      'Enged√©lyezd a k√©tfaktoros hiteles√≠t√©st, ha el√©rhet≈ë',
      'Rendszeresen v√°ltoztasd meg jelszavad'
    ]
  })}

    <p style="${BASE_STYLES.paragraph}; font-size: 12px; color: ${COLORS.gray[500]};">
      Ha te v√©gezted a v√°ltoztat√°st, akkor ezt az emailt nyugodtan figyelmen k√≠v√ºl hagyhatod.
    </p>
  `;

  const html = renderBaseLayout({
    title: subject,
    headerHtml: renderHeader({ title: headerTitle, subtitle: headerSubtitle, variant: 'info' }),
    contentHtml: mainContent,
    footerHtml: renderFooter({ siteName, companyName })
  });

  const text = `Jelsz√≥ Megv√°ltoztatva - ${siteName}

Kedves ${user.name || user.firstName || user.email}!

Ez egy biztons√°gi √©rtes√≠t√©s arr√≥l, hogy a fi√≥kodhoz tartoz√≥ jelsz√≥t nemr√©g megv√°ltoztatt√°k.

‚úÖ Jelsz√≥ sikeresen megv√°ltoztatva ${changeTime} id≈ëpontban.

Ha nem te v√°ltoztattad meg a jelsz√≥t:
- Azonnal l√©pj be a fi√≥kodba √©s v√°ltoztasd meg a jelsz√≥t
- Ellen≈ërizd a legut√≥bbi bejelentkez√©seket
- Vedd fel a kapcsolatot az √ºgyf√©lszolg√°lattal

Bejelentkez√©s: ${process.env.BASE_URL || DEFAULT_BASE_URL}/login

Biztons√°gi Tippek:
- Haszn√°lj egyedi, er≈ës jelsz√≥t minden fi√≥kodhoz
- Ne oszd meg jelszavad m√°sokkal
- Enged√©lyezd a k√©tfaktoros hiteles√≠t√©st, ha el√©rhet≈ë
- Rendszeresen v√°ltoztasd meg jelszavad

¬© ${new Date().getFullYear()} ${siteName} - ${companyName}`;

  return { subject, html, text };
}

/**
 * Generate email change verification email
 * @param {Object} params - Email change parameters
 * @param {Object} params.user - User data
 * @param {string} params.newEmail - New email address
 * @param {string} params.verificationLink - Verification link
 * @param {string} params.siteName - Site name
 * @param {string} params.companyName - Company name
 * @returns {Object} Email subject, html, and text
 */
function generateEmailChangeVerificationEmail({ user, newEmail, verificationLink, siteName, companyName }) {
  loadDependencies();

  const subject = `üìß Email C√≠m Meger≈ës√≠t√©s - ${siteName}`;

  const headerTitle = 'üìß Email C√≠m Meger≈ës√≠t√©s';
  const headerSubtitle = 'K√©rj√ºk, er≈ës√≠tse meg √∫j email c√≠m√©t';

  const mainContent = `
    <h2 style="${BASE_STYLES.h2}">Kedves ${user.firstName || user.email}!</h2>
    
    <p style="${BASE_STYLES.paragraph}">
      K√©r√©st kaptunk az √ñn fi√≥kj√°hoz tartoz√≥ email c√≠m megv√°ltoztat√°s√°ra.
    </p>

    ${renderInfoBox({
    title: 'üìã Email V√°ltoztat√°s R√©szletei',
    items: [
      `<strong>R√©gi email:</strong> ${user.email}`,
      `<strong>√öj email:</strong> ${newEmail}`,
      `<strong>K√©relem ideje:</strong> ${new Date().toLocaleString('hu-HU')}`
    ]
  })}

    ${renderAlertBox({
    type: 'warning',
    title: '‚ö†Ô∏è Fontos - Meger≈ës√≠t√©s Sz√ºks√©ges',
    message: 'A v√°ltoztat√°s v√©gleges√≠t√©s√©hez kattintson az al√°bbi gombra az √∫j email c√≠m meger≈ës√≠t√©s√©hez.'
  })}

    <div style="text-align: center; margin: 30px 0;">
      <a href="${verificationLink}"
         style="display: inline-block; background: ${COLORS.primary[600]}; color: white;
                padding: 12px 24px; text-decoration: none; border-radius: 6px; font-weight: bold;">
        ‚úÖ Email C√≠m Meger≈ës√≠t√©se
      </a>
    </div>

    <p style="${BASE_STYLES.paragraph}; font-size: 14px; color: ${COLORS.gray[600]};">
      Ha a gomb nem m≈±k√∂dik, m√°solja be ezt a linket a b√∂ng√©sz≈ëj√©be:
    </p>
    ${renderCodeBlock(verificationLink)}

    ${renderAlertBox({
    type: 'info',
    title: 'üîê Biztons√°gi Inform√°ci√≥',
    message: `
        <ul style="margin: 10px 0 0 20px; padding: 0;">
          <li style="margin: 5px 0;">Ez a meger≈ës√≠t≈ë link <strong>24 √≥r√°n bel√ºl</strong> lej√°r</li>
          <li style="margin: 5px 0;">
            Ha nem √ñn k√©rte a v√°ltoztat√°st, nyugodtan figyelmen k√≠v√ºl hagyhatja ezt az emailt
          </li>
          <li style="margin: 5px 0;">A r√©gi email c√≠m mindaddig akt√≠v marad, am√≠g az √∫j c√≠met meg nem er≈ës√≠ti</li>
        </ul>
      `
  })}

    <p style="${BASE_STYLES.paragraph}; font-size: 12px; color: ${COLORS.gray[500]};">
      Ha nem √ñn kezdem√©nyezte ezt a v√°ltoztat√°st, akkor fi√≥kja vesz√©lyben lehet. 
      K√©rj√ºk, azonnal l√©pjen be √©s v√°ltoztassa meg jelszav√°t.
    </p>
  `;

  const html = renderBaseLayout({
    title: subject,
    headerHtml: renderHeader({ title: headerTitle, subtitle: headerSubtitle, variant: 'warning' }),
    contentHtml: mainContent,
    footerHtml: renderFooter({ siteName, companyName })
  });

  const text = `Email C√≠m Meger≈ës√≠t√©s - ${siteName}

Kedves ${user.firstName || user.email}!

K√©r√©st kaptunk az √ñn fi√≥kj√°hoz tartoz√≥ email c√≠m megv√°ltoztat√°s√°ra.

Email V√°ltoztat√°s R√©szletei:
- R√©gi email: ${user.email}
- √öj email: ${newEmail}
- K√©relem ideje: ${new Date().toLocaleString('hu-HU')}

A v√°ltoztat√°s v√©gleges√≠t√©s√©hez kattintson az al√°bbi linkre:
${verificationLink}

Biztons√°gi Inform√°ci√≥:
- Ez a meger≈ës√≠t≈ë link 24 √≥r√°n bel√ºl lej√°r
- Ha nem √ñn k√©rte a v√°ltoztat√°st, nyugodtan figyelmen k√≠v√ºl hagyhatja ezt az emailt
- A r√©gi email c√≠m mindaddig akt√≠v marad, am√≠g az √∫j c√≠met meg nem er≈ës√≠ti

¬© ${new Date().getFullYear()} ${siteName} - ${companyName}`;

  return { subject, html, text };
}

/**
 * Generate general notification email
 * @param {Object} params - Notification parameters
 * @param {string} params.title - Notification title
 * @param {string} params.message - Notification message
 * @param {string} params.variant - Variant type (info/success/warning/error)
 * @param {string} params.siteName - Site name
 * @param {string} params.companyName - Company name
 * @returns {Object} Email subject, html, and text
 */
function generateNotificationEmail({ title, message, variant = 'info', siteName, companyName }) {
  loadDependencies();

  const subject = `üì¨ ${title} - ${siteName}`;

  const variantIcons = {
    info: '‚ÑπÔ∏è',
    success: '‚úÖ',
    warning: '‚ö†Ô∏è',
    error: 'üö®'
  };
  const icon = variantIcons[variant] || '‚ÑπÔ∏è';

  const headerTitle = `${icon} ${title}`;
  const headerSubtitle = '√ârtes√≠t√©s';

  const mainContent = `
    <h2 style="${BASE_STYLES.h2}">${icon} ${title}</h2>
    
    ${renderAlertBox({
    type: variant,
    title,
    message
  })}

    <p style="${BASE_STYLES.paragraph}">
      Ez egy automatikusan gener√°lt √©rtes√≠t√©s a ${siteName} rendszerb≈ël.
    </p>

    <p style="${BASE_STYLES.paragraph}; font-size: 12px; color: ${COLORS.gray[500]};">
      K√©rd√©se van? √çrjon nek√ºnk vagy l√©pjen be a fi√≥kj√°ba tov√°bbi inform√°ci√≥k√©rt.
    </p>

    <div style="text-align: center; margin: 30px 0;">
      <a href="${process.env.BASE_URL || DEFAULT_BASE_URL}"
         style="display: inline-block; background: ${COLORS.primary[600]}; color: white;
                padding: 12px 24px; text-decoration: none; border-radius: 6px; font-weight: bold;">
        üè† Vissza a F≈ëoldalra
      </a>
    </div>
  `;

  const html = renderBaseLayout({
    title: subject,
    headerHtml: renderHeader({ title: headerTitle, subtitle: headerSubtitle, variant }),
    contentHtml: mainContent,
    footerHtml: renderFooter({ siteName, companyName })
  });

  const text = `${title} - ${siteName}

${message}

Ez egy automatikusan gener√°lt √©rtes√≠t√©s a ${siteName} rendszerb≈ël.

¬© ${new Date().getFullYear()} ${siteName} - ${companyName}`;

  return { subject, html, text };
}

module.exports = {
  generateSecurityAlertEmail,
  generatePasswordChangedEmail,
  generateEmailChangeVerificationEmail,
  generateNotificationEmail
};
