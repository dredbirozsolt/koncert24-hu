#!/bin/bash

# Koncert24.hu Backup Script
# K√©sz√≠t teljes backup-ot a f√°jlokr√≥l √©s az adatb√°zisr√≥l

set -e  # Kil√©p√©s hiba eset√©n

# Sz√≠nek a kimeneti √ºzenetekhez
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Projekt gy√∂k√©r k√∂nyvt√°r
PROJECT_ROOT="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
cd "$PROJECT_ROOT"

# Timestamp a backup f√°jlokhoz
TIMESTAMP=$(date +"%Y%m%d_%H%M%S")
BACKUP_DIR="$PROJECT_ROOT/backup/backup_$TIMESTAMP"

# .env f√°jl bet√∂lt√©se
if [ -f .env ]; then
    export $(cat .env | grep -v '^#' | grep -v '^$' | xargs)
else
    echo -e "${RED}‚ùå .env f√°jl nem tal√°lhat√≥!${NC}"
    exit 1
fi

# Funkci√≥k
log_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

log_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

log_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

log_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# Backup k√∂nyvt√°r l√©trehoz√°sa
create_backup_dir() {
    log_info "Backup k√∂nyvt√°r l√©trehoz√°sa: $BACKUP_DIR"
    mkdir -p "$BACKUP_DIR"
    log_success "Backup k√∂nyvt√°r l√©trehozva"
}

# F√°jlok backup-ja
backup_files() {
    log_info "Projekt f√°jlok backup-ja..."
    
    # Kiz√°rt f√°jlok √©s k√∂nyvt√°rak list√°ja
    EXCLUDE_FILE="$PROJECT_ROOT/.backup-exclude"
    cat > "$EXCLUDE_FILE" << EOF
node_modules/
backup/
logs/
*.log
.DS_Store
.env.local
.env.production
.vscode/
.idea/
*.tmp
*.temp
coverage/
.nyc_output/
dist/
build/
EOF

    # F√°jlok t√∂m√∂r√≠t√©se
    tar --exclude-from="$EXCLUDE_FILE" \
        -czf "$BACKUP_DIR/files_$TIMESTAMP.tar.gz" \
        -C "$PROJECT_ROOT" \
        .
    
    # Cleanup
    rm "$EXCLUDE_FILE"
    
    log_success "Projekt f√°jlok mentve: files_$TIMESTAMP.tar.gz"
}

# Adatb√°zis backup
backup_database() {
    log_info "Adatb√°zis backup..."
    
    # Ellen≈ërizz√ºk a MySQL kapcsolatot
    if ! command -v mysqldump &> /dev/null; then
        log_error "mysqldump parancs nem tal√°lhat√≥! Telep√≠tsd a MySQL klienst."
        return 1
    fi
    
    # MySQL kapcsolat tesztel√©se
    if ! mysql -h"${DB_HOST:-127.0.0.1}" -P"${DB_PORT:-3306}" -u"$DB_USER" -p"$DB_PASSWORD" -e "USE $DB_NAME;" 2>/dev/null; then
        log_error "Nem siker√ºlt csatlakozni az adatb√°zishoz!"
        log_warning "Host: ${DB_HOST:-127.0.0.1}, Port: ${DB_PORT:-3306}, User: $DB_USER, DB: $DB_NAME"
        return 1
    fi
    
    # Teljes adatb√°zis dump
    # --skip-add-locks: nem ig√©nyel LOCK TABLES jogot
    # --no-tablespaces: nem ig√©nyel PROCESS privileged-t
    # --skip-lock-tables: nem z√°rolja a t√°bl√°kat (m√°r single-transaction-nel van)
    mysqldump \
        -h"${DB_HOST:-127.0.0.1}" \
        -P"${DB_PORT:-3306}" \
        -u"$DB_USER" \
        -p"$DB_PASSWORD" \
        --single-transaction \
        --no-tablespaces \
        --skip-add-locks \
        --skip-lock-tables \
        --routines \
        --triggers \
        --add-drop-database \
        --add-drop-table \
        --create-options \
        --disable-keys \
        --extended-insert \
        --quick \
        "$DB_NAME" > "$BACKUP_DIR/database_$TIMESTAMP.sql" 2>&1
    
    # SQL f√°jl t√∂m√∂r√≠t√©se
    gzip "$BACKUP_DIR/database_$TIMESTAMP.sql"
    
    log_success "Adatb√°zis mentve: database_$TIMESTAMP.sql.gz"
}

# K√∂rnyezet inform√°ci√≥k ment√©se
backup_environment() {
    log_info "K√∂rnyezet inform√°ci√≥k ment√©se..."
    
    cat > "$BACKUP_DIR/environment_$TIMESTAMP.txt" << EOF
# Koncert24.hu Backup Information
# Id≈ëpont: $(date)
# Felhaszn√°l√≥: $(whoami)
# Hostname: $(hostname)
# OS: $(uname -a)

# Node.js verzi√≥
$(node --version 2>/dev/null || echo "Node.js nincs telep√≠tve")

# NPM verzi√≥
$(npm --version 2>/dev/null || echo "NPM nincs telep√≠tve")

# Telep√≠tett csomagok
EOF
    
    if [ -f package.json ]; then
        echo "# Package.json dependencies:" >> "$BACKUP_DIR/environment_$TIMESTAMP.txt"
        cat package.json | grep -A 1000 '"dependencies"' | grep -B 1000 '}' >> "$BACKUP_DIR/environment_$TIMESTAMP.txt"
    fi
    
    log_success "K√∂rnyezet inform√°ci√≥k mentve: environment_$TIMESTAMP.txt"
}

# Backup metaadatok
create_backup_metadata() {
    log_info "Backup metaadatok l√©trehoz√°sa..."
    
    cat > "$BACKUP_DIR/backup_info.json" << EOF
{
  "backup_timestamp": "$TIMESTAMP",
  "backup_date": "$(date -Iseconds)",
  "project_name": "koncert24.hu",
  "backup_version": "1.0",
  "files": {
    "project_files": "files_$TIMESTAMP.tar.gz",
    "database": "database_$TIMESTAMP.sql.gz",
    "environment": "environment_$TIMESTAMP.txt"
  },
  "checksums": {
    "project_files": "$(md5 -q "$BACKUP_DIR/files_$TIMESTAMP.tar.gz" 2>/dev/null || echo 'N/A')",
    "database": "$(md5 -q "$BACKUP_DIR/database_$TIMESTAMP.sql.gz" 2>/dev/null || echo 'N/A')"
  },
  "size": {
    "project_files": "$(ls -lh "$BACKUP_DIR/files_$TIMESTAMP.tar.gz" | awk '{print $5}' 2>/dev/null || echo 'N/A')",
    "database": "$(ls -lh "$BACKUP_DIR/database_$TIMESTAMP.sql.gz" | awk '{print $5}' 2>/dev/null || echo 'N/A')"
  }
}
EOF
    
    log_success "Backup metaadatok l√©trehozva: backup_info.json"
}

# R√©gi backup-ok tiszt√≠t√°sa (opcion√°lis)
cleanup_old_backups() {
    log_info "R√©gi backup-ok ellen≈ërz√©se..."
    
    # Be√°ll√≠t√°sok bet√∂lt√©se az adatb√°zisb√≥l
    SETTINGS_JSON=$(node -r dotenv/config "$PROJECT_ROOT/scripts/get-backup-settings.js" 2>/dev/null)
    if [ $? -eq 0 ] && [ -n "$SETTINGS_JSON" ]; then
        MAX_AGE_DAYS=$(echo "$SETTINGS_JSON" | grep -o '"maxAgeDays":[0-9]*' | cut -d':' -f2)
        MAX_COUNT=$(echo "$SETTINGS_JSON" | grep -o '"maxCount":[0-9]*' | cut -d':' -f2)
        
        # Ha √ºres, haszn√°ljuk az alap√©rtelmezett √©rt√©keket
        [ -z "$MAX_AGE_DAYS" ] && MAX_AGE_DAYS=30
        [ -z "$MAX_COUNT" ] && MAX_COUNT=30
    else
        # Ha nem siker√ºlt bet√∂lteni, haszn√°ljuk az alap√©rtelmezett √©rt√©keket
        log_warning "Nem siker√ºlt bet√∂lteni a be√°ll√≠t√°sokat az adatb√°zisb√≥l, alap√©rtelmezett √©rt√©kek haszn√°lata"
        MAX_AGE_DAYS=30
        MAX_COUNT=30
    fi
    
    log_info "Be√°ll√≠t√°sok: Max √©letkor: $MAX_AGE_DAYS nap, Max darabsz√°m: $MAX_COUNT"
    
    # R√©gebbi backup-ok t√∂rl√©se
    find "$PROJECT_ROOT/backup" -name "backup_*" -type d -mtime +$MAX_AGE_DAYS -exec rm -rf {} + 2>/dev/null || true
    
    # Maximum sz√°m√∫ backup megtart√°sa
    BACKUP_COUNT=$(find "$PROJECT_ROOT/backup" -name "backup_*" -type d | wc -l | tr -d ' ')
    if [ "$BACKUP_COUNT" -gt "$MAX_COUNT" ]; then
        log_warning "T√∂bb mint $MAX_COUNT backup tal√°lhat√≥. Legr√©gebbiek t√∂rl√©se..."
        find "$PROJECT_ROOT/backup" -name "backup_*" -type d | sort | head -n $((BACKUP_COUNT - MAX_COUNT)) | xargs rm -rf
    fi
    
    log_success "R√©gi backup-ok tiszt√≠tva"
}

# √ñsszefoglal√≥ jelent√©s
show_summary() {
    echo -e "\n${GREEN}üìã Backup √ñsszefoglal√≥${NC}"
    echo "=================================="
    echo "üìÅ Backup k√∂nyvt√°r: $BACKUP_DIR"
    echo "üïê Id≈ëpont: $(date)"
    echo ""
    echo "üì¶ Mentett f√°jlok:"
    ls -lh "$BACKUP_DIR" | grep -v "^total" | while read line; do
        echo "   $line"
    done
    
    # Teljes backup m√©ret
    TOTAL_SIZE=$(du -sh "$BACKUP_DIR" | cut -f1)
    echo ""
    echo "üíæ Teljes backup m√©ret: $TOTAL_SIZE"
    echo ""
    echo -e "${GREEN}‚úÖ Backup sikeresen elk√©sz√ºlt!${NC}"
}

# Hiba kezel√©s
handle_error() {
    log_error "Hiba t√∂rt√©nt a backup sor√°n!"
    if [ -d "$BACKUP_DIR" ]; then
        log_warning "R√©szleges backup t√∂rl√©se: $BACKUP_DIR"
        rm -rf "$BACKUP_DIR"
    fi
    exit 1
}

# F≈ë backup folyamat
main() {
    echo -e "${BLUE}"
    echo "üé≠ Koncert24.hu Backup Script"
    echo "============================="
    echo -e "${NC}"
    
    # Hiba eset√©n cleanup
    trap handle_error ERR
    
    # Backup l√©p√©sek
    create_backup_dir
    backup_files
    backup_database
    backup_environment
    create_backup_metadata
    cleanup_old_backups
    show_summary
}

# Param√©terek ellen≈ërz√©se
if [ "$1" = "--help" ] || [ "$1" = "-h" ]; then
    echo "Koncert24.hu Backup Script"
    echo ""
    echo "Haszn√°lat: ./backup.sh"
    echo ""
    echo "A script teljes backup-ot k√©sz√≠t (f√°jlok + adatb√°zis + k√∂rnyezet info)."
    echo ""
    echo "Opci√≥k:"
    echo "  -h, --help     Ez a s√∫g√≥ √ºzenet"
    echo ""
    echo "P√©lda:"
    echo "  ./backup.sh    # Teljes backup"
    exit 0
fi

# Teljes backup
main
